<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>cheatsheets | Bodo Burger</title><link>https://bodoburger.github.io/category/cheatsheets/</link><atom:link href="https://bodoburger.github.io/category/cheatsheets/index.xml" rel="self" type="application/rss+xml"/><description>cheatsheets</description><generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>Bodo Burger 2021</copyright><lastBuildDate>Tue, 11 Jul 2017 00:00:00 +0000</lastBuildDate><image><url>https://bodoburger.github.io/images/logo_huf0189912a6c4c6fe87cd287c2a6e1211_3971_300x300_fit_lanczos_2.png</url><title>cheatsheets</title><link>https://bodoburger.github.io/category/cheatsheets/</link></image><item><title>Git Resources / Cheat Sheet</title><link>https://bodoburger.github.io/post/2017-07-git-cheat-sheet/</link><pubDate>Tue, 11 Jul 2017 00:00:00 +0000</pubDate><guid>https://bodoburger.github.io/post/2017-07-git-cheat-sheet/</guid><description>&lt;details class="toc-inpage d-print-none " open>
&lt;summary class="font-weight-bold">Table of Contents&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#useful-articles--resources">Useful articles / resources&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#basics">Basics&lt;/a>&lt;/li>
&lt;li>&lt;a href="#interesting-discussions-on-git">Interesting discussions on Git&lt;/a>&lt;/li>
&lt;li>&lt;a href="#github">GitHub&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#branches">Branches&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#change-branch-without-committing-changes-stash-and-pop">Change branch without committing changes: stash and pop&lt;/a>&lt;/li>
&lt;li>&lt;a href="#create-a-local-branch-push-it-to-a-remote-repository-and-track-it">Create a local branch, push it to a remote repository and track it&lt;/a>&lt;/li>
&lt;li>&lt;a href="#delete-local-branch">Delete local branch&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#configuration">Configuration&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#show-or-change-git-username-or-email-address">Show or change Git username or email address&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#index">Index&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#remove-files-from-the-index-without-removing-them-from-disc">Remove files from the index without removing them from disc&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#merging">Merging&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#merge-master-into-feature-branch-before-making-a-pr">Merge master into feature branch before making a PR&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#remote">Remote&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#push-local-repository-to-existing-remote">Push local repository to existing remote&lt;/a>&lt;/li>
&lt;li>&lt;a href="#show-or-change-remote">Show or change remote&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#submodules">Submodules&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#add-a-submodule">Add a submodule&lt;/a>&lt;/li>
&lt;li>&lt;a href="#download-files-to-empty-submodule-directory">Download files to empty submodule directory&lt;/a>&lt;/li>
&lt;li>&lt;a href="#remove-a-submodule-leaving-no-trace">Remove a submodule (leaving no trace)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;p>This blog post combines both a collection of useful resources on Git and
a cheat sheet for git commands I googled repeatedly.
It will be updated from time to time.&lt;/p>
&lt;h2 id="useful-articles--resources">Useful articles / resources&lt;/h2>
&lt;h3 id="basics">Basics&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://git-scm.com/docs" target="_blank" rel="noopener">Git reference manual&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://git-scm.com/book/en/v2" target="_blank" rel="noopener">Pro Git book (2nd, 2014)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://stackoverflow.com/questions/315911/git-for-beginners-the-definitive-practical-guide" target="_blank" rel="noopener">Git for beginners on stackoverflow&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://rogerdudler.github.io/git-guide/" target="_blank" rel="noopener">git - the simple guide&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://akrabat.com/the-beginners-guide-to-contributing-to-a-github-project/" target="_blank" rel="noopener">The beginner&amp;rsquo;s guide to contributing to a GitHub project&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://sethrobertson.github.io/GitFixUm/fixup.html" target="_blank" rel="noopener">On undoing, fixing, or removing commits in git&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://justinhileman.info/article/git-pretty/" target="_blank" rel="noopener">Git pretty chart&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="interesting-discussions-on-git">Interesting discussions on Git&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://nvie.com/posts/a-successful-git-branching-model/" target="_blank" rel="noopener">A successful Git branching model&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://chris.beams.io/posts/git-commit/" target="_blank" rel="noopener">How to Write a Git Commit Message&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://lornajane.net/posts/2015/code-reviews-before-you-even-run-the-code" target="_blank" rel="noopener">Code Reviews: Before You Even Run The Code&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://softwareengineering.stackexchange.com/questions/69178/what-is-the-benefit-of-gits-two-stage-commit-process-staging" target="_blank" rel="noopener">What is the benefit of gits two stage commit process&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://stackoverflow.com/questions/4878358/why-would-i-want-stage-before-committing-in-git" target="_blank" rel="noopener">Why would I want to stage before committing?&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="github">GitHub&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://github.com/KirstieJane/STEMMRoleModels/wiki/Syncing-your-fork-to-the-original-repository-via-the-browser" target="_blank" rel="noopener">Keep your fork up to date with the original repo via GitHub browser interface&lt;/a>
(&lt;a href="https://stackoverflow.com/questions/20984802/how-can-i-keep-my-fork-in-sync-without-adding-a-separate-remote/21131381#21131381" target="_blank" rel="noopener">stackoverflow&lt;/a>)&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="branches">Branches&lt;/h2>
&lt;h3 id="change-branch-without-committing-changes-stash-and-pop">Change branch without committing changes: stash and pop&lt;/h3>
&lt;p>Want to have a look at another branch without committing changes done so far?
Put them in a stash where they can hide until you switch back.&lt;/p>
&lt;pre>&lt;code class="language-Bash">$ git stash # on the original branch
$ git checkout other-branch
# do some stuff on the other branch
$ git checkout original-branch
$ git stash pop
&lt;/code>&lt;/pre>
&lt;p>More about &lt;a href="https://git-scm.com/docs/git-stash" target="_blank" rel="noopener">&lt;em>git-stash&lt;/em>&lt;/a>.&lt;/p>
&lt;h3 id="create-a-local-branch-push-it-to-a-remote-repository-and-track-it">Create a local branch, push it to a remote repository and track it&lt;/h3>
&lt;pre>&lt;code class="language-Bash">$ git checkout -b MyNewBranch # create and switch to new branch
# do some stuff
$ git push -u origin MyNewBranch
&lt;/code>&lt;/pre>
&lt;h3 id="delete-local-branch">Delete local branch&lt;/h3>
&lt;pre>&lt;code class="language-Bash">$ git branch -d MyLocalBranch
&lt;/code>&lt;/pre>
&lt;h2 id="configuration">Configuration&lt;/h2>
&lt;h3 id="show-or-change-git-username-or-email-address">Show or change Git username or email address&lt;/h3>
&lt;pre>&lt;code class="language-Bash">$ git config --list # repository-specific settings
$ git config --list --global # global git settings
$ git config user.name &amp;quot;Enrico Pallazzo&amp;quot;
$ git config user.email &amp;quot;enrico.pallazzo@lapd.com&amp;quot;
&lt;/code>&lt;/pre>
&lt;p>The global settings are stored in the Git config file
in the HOME directory (&lt;code>~/.gitconfig&lt;/code>),
repository-specific settings are found at &lt;code>.git/config&lt;/code>
in the respective repository folder.&lt;/p>
&lt;h2 id="index">Index&lt;/h2>
&lt;h3 id="remove-files-from-the-index-without-removing-them-from-disc">Remove files from the index without removing them from disc&lt;/h3>
&lt;p>If you forgot to add a file to &lt;code>.gitignore&lt;/code>:&lt;/p>
&lt;pre>&lt;code class="language-Bash">$ git rm -rf --cached file-name
&lt;/code>&lt;/pre>
&lt;p>The file is now untracked and can be added to &lt;code>.gitignore&lt;/code>.
Then, you can commit the deletion and the modified gitignore file.&lt;/p>
&lt;h2 id="merging">Merging&lt;/h2>
&lt;h3 id="merge-master-into-feature-branch-before-making-a-pr">Merge master into feature branch before making a PR&lt;/h3>
&lt;pre>&lt;code class="language-Bash">$ git checkout master
$ git pull
$ git checkout new-feature
$ git add *files-and-changes*
$ git commit -m &amp;quot;feature description&amp;quot;
$ git reset HEAD --hard # removes all uncommited files
$ rm *untracked-files* # to prevent merge conflicts
$ git merge master
# resolve potential merge conflicts
$ git commit -m &amp;quot;resolved mergeconflicts | merged master&amp;quot;
$ git push origin new-feature
&lt;/code>&lt;/pre>
&lt;h2 id="remote">Remote&lt;/h2>
&lt;h3 id="push-local-repository-to-existing-remote">Push local repository to existing remote&lt;/h3>
&lt;pre>&lt;code class="language-Bash">$ git remote add origin git@github.com:USERNAME/REPOSITORY.git
$ git push --all --set-upstream origin
&lt;/code>&lt;/pre>
&lt;h3 id="show-or-change-remote">Show or change remote&lt;/h3>
&lt;p>In this example we switch from HTTPS to SSH:&lt;/p>
&lt;pre>&lt;code class="language-Bash">$ git remote -v
&amp;gt; origin https://github.com/USERNAME/REPOSITORY.git (fetch)
&amp;gt; origin https://github.com/USERNAME/REPOSITORY.git (push)
$ git remote set-url origin git@github.com:USERNAME/REPOSITORY.git
$ git remote -v
&amp;gt; origin git@github.com:USERNAME/REPOSITORY.git (fetch)
&amp;gt; origin git@github.com:USERNAME/REPOSITORY.git (push)
&lt;/code>&lt;/pre>
&lt;h2 id="submodules">Submodules&lt;/h2>
&lt;p>&lt;a href="https://git-scm.com/docs/git-submodule">https://git-scm.com/docs/git-submodule&lt;/a>&lt;/p>
&lt;h3 id="add-a-submodule">Add a submodule&lt;/h3>
&lt;pre>&lt;code class="language-Bash">git submodule add git@github.com:USERNAME/REPOSITORY.git PATH/TO/SUBMODULEDIR
&lt;/code>&lt;/pre>
&lt;h3 id="download-files-to-empty-submodule-directory">Download files to empty submodule directory&lt;/h3>
&lt;p>When cloning a repository with submodules and the submodule directories are empty:&lt;/p>
&lt;pre>&lt;code class="language-Bash">git submodule update --init --recursive
&lt;/code>&lt;/pre>
&lt;h3 id="remove-a-submodule-leaving-no-trace">Remove a submodule (leaving no trace)&lt;/h3>
&lt;pre>&lt;code class="language-Bash">git rm PATH/TO/SUBMODULEDIR
rm -rf .git/modules/PATH/TO/SUBMODULEDIR
git config -f .git/config --remove-section submodule.PATH/TO/SUBMODULEDIR 2&amp;gt; /dev/null
&lt;/code>&lt;/pre></description></item></channel></rss>