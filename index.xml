<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bodo Burger</title><link>https://bodoburger.github.io/</link><atom:link href="https://bodoburger.github.io/index.xml" rel="self" type="application/rss+xml"/><description>Bodo Burger</description><generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>Bodo Burger 2021</copyright><lastBuildDate>Tue, 10 Dec 2019 00:00:00 +0000</lastBuildDate><image><url>https://bodoburger.github.io/images/logo_huf0189912a6c4c6fe87cd287c2a6e1211_3971_300x300_fit_lanczos_2.png</url><title>Bodo Burger</title><link>https://bodoburger.github.io/</link></image><item><title>Basic tweaks and configuration</title><link>https://bodoburger.github.io/notes/ubuntu/basic-tweaks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bodoburger.github.io/notes/ubuntu/basic-tweaks/</guid><description>&lt;h2 id="disable-middle-click-paste">Disable middle click paste&lt;/h2>
&lt;p>&lt;a href="https://wiki.ubuntuusers.de/GNOME_Tweak_Tool/">https://wiki.ubuntuusers.de/GNOME_Tweak_Tool/&lt;/a>&lt;/p>
&lt;h2 id="disable-looking-for-wifi-printer">Disable looking for wifi printer&lt;/h2>
&lt;pre>&lt;code class="language-bash">/etc/cups/cups-browsed.conf
## Change BrowseRemoteProtocols dnssd cups to
BrowseRemoteProtocols none
&lt;/code>&lt;/pre>
&lt;p>&lt;a href="https://ubuntuforums.org/showthread.php?t=2330752">https://ubuntuforums.org/showthread.php?t=2330752&lt;/a>&lt;/p>
&lt;h2 id="keyboardshortcut-power-off">Keyboardshortcut Power off&lt;/h2>
&lt;p>Adding shortcut for &lt;em>Power off&lt;/em> screen by setting custom shortcut:&lt;/p>
&lt;p>&lt;code>gnome-session-quit --power-off&lt;/code>&lt;/p>
&lt;h2 id="kein-lock-screen-nach-suspend">Kein Lock screen nach Suspend&lt;/h2>
&lt;p>&lt;a href="https://www.techgrube.de/tutorials/ubuntu-sperrbildschirm-nach-standby-deaktivieren">https://www.techgrube.de/tutorials/ubuntu-sperrbildschirm-nach-standby-deaktivieren&lt;/a>&lt;/p>
&lt;p>&amp;ldquo;Die gewünschte Einstellung findet man dann unter org -&amp;gt; Gnome -&amp;gt; Desktop -&amp;gt; screensaver. Hier entfernt man einfach bei ubuntu-lock-on-suspend das Häkchen.&amp;rdquo;&lt;/p>
&lt;h2 id="make-header-bar-of-windows-thinner">Make header bar of windows &amp;ldquo;thinner&amp;rdquo;&lt;/h2>
&lt;p>Create a CSS file under &lt;code>.config\gtk-3\gtk.css&lt;/code> with the following content:&lt;/p>
&lt;pre>&lt;code class="language-css">headerbar entry,
headerbar spinbutton,
headerbar button,
headerbar separator {
margin-top: 0px; /* same as headerbar side padding for nicer proportions */
margin-bottom: 0px;
min-height: 20px;
}
headerbar {
min-height: 20px;
padding-left: 2px; /* same as childrens vertical margins for nicer proportions */
padding-right: 2px;
margin: 0px; /* same as headerbar side padding for nicer proportions */
padding: 0px;
}
&lt;/code>&lt;/pre>
&lt;p>Press &lt;em>Alt-F2&lt;/em> und type in &lt;code>r&lt;/code> to make the changes effective.&lt;/p></description></item><item><title>Installing software</title><link>https://bodoburger.github.io/notes/ubuntu/install-software/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bodoburger.github.io/notes/ubuntu/install-software/</guid><description>&lt;h2 id="software-list">Software list&lt;/h2>
&lt;ul>
&lt;li>APT
&lt;ul>
&lt;li>tlp (use PPA ppa:linrunner/tlp for latest version)&lt;/li>
&lt;li>TexLive: &lt;code>sudo apt install texlive-full&lt;/code> (4GB)&lt;/li>
&lt;li>R (&lt;a href="../r-stats">more info&lt;/a>)&lt;/li>
&lt;li>Scribus&lt;/li>
&lt;li>&lt;a href="https://www.darktable.org/install" target="_blank" rel="noopener">darktable&lt;/a>: &lt;code>bash sudo apt install darktable&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Snap (Ubuntu Software Manager)
&lt;ul>
&lt;li>Chromium&lt;/li>
&lt;li>&lt;a href="https://code.visualstudio.com/" target="_blank" rel="noopener">VS Code&lt;/a>&lt;/li>
&lt;li>keepassxc&lt;/li>
&lt;li>VLC&lt;/li>
&lt;li>libreoffice&lt;/li>
&lt;li>GitKraken&lt;/li>
&lt;li>gimp&lt;/li>
&lt;li>go (and hugo)&lt;/li>
&lt;li>node&lt;/li>
&lt;li>Octave (Matlab alternative)&lt;/li>
&lt;li>&lt;a href="https://snapcraft.io/foliate" target="_blank" rel="noopener">Foliate&lt;/a> (epub reader)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Flatpak
&lt;ul>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>.deb (manually)
&lt;ul>
&lt;li>&lt;a href="https://rstudio.com/products/rstudio/download/" target="_blank" rel="noopener">Rstudio&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://code-industry.net/free-pdf-editor/" target="_blank" rel="noopener">Master PDF&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>.sh
&lt;ul>
&lt;li>Anaconda&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="alarm-clock-and-timer">Alarm clock and timer&lt;/h3>
&lt;p>&lt;a href="https://wiki.ubuntuusers.de/Alarm_Clock/">https://wiki.ubuntuusers.de/Alarm_Clock/&lt;/a>&lt;/p>
&lt;pre>&lt;code class="language-bash">sudo apt install alarm-clock-applet
sudo apt install sound-icons # folder location: /usr/share/sounds/sound-icons/.
&lt;/code>&lt;/pre>
&lt;h3 id="nvidia-drivers">Nvidia drivers&lt;/h3>
&lt;p>&amp;ldquo;Software &amp;amp; Updates &amp;ndash;&amp;gt; Additional Drivers&amp;rdquo;&lt;/p>
&lt;h2 id="package-management">Package management&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://book.dpmb.org/debian-paketmanagement.chunked/ch03s02.html">https://book.dpmb.org/debian-paketmanagement.chunked/ch03s02.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://book.dpmb.org/debian-paketmanagement.chunked/ch03s03.html">https://book.dpmb.org/debian-paketmanagement.chunked/ch03s03.html&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>PDF</title><link>https://bodoburger.github.io/notes/ubuntu/pdf/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bodoburger.github.io/notes/ubuntu/pdf/</guid><description>&lt;h2 id="extracting-photos-from-multiple-pdfs-using-pdfunite-and-pdfimages">Extracting photos from multiple PDFs using pdfunite and pdfimages&lt;/h2>
&lt;pre>&lt;code class="language-bash">pdfunite *.pdf allphotos.pdf
pdfimages -j ‘allphotos.pdf’ image
&lt;/code>&lt;/pre></description></item><item><title>R, packages and its dependencies</title><link>https://bodoburger.github.io/notes/ubuntu/r-stats/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bodoburger.github.io/notes/ubuntu/r-stats/</guid><description>&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>&lt;a href="https://cloud.r-project.org/bin/linux/ubuntu/README.html">https://cloud.r-project.org/bin/linux/ubuntu/README.html&lt;/a>&lt;/p>
&lt;pre>&lt;code class="language-bash"># adding secure apt key:
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9
# adding cran-mirror for Ubuntu 20.04:
sudo add-apt-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/'
# installing r-base and r-dev
sudo apt update
sudo apt install r-base r-base-dev
&lt;/code>&lt;/pre>
&lt;ul>
&lt;li>RStudio: &lt;a href="https://www.rstudio.com/products/rstudio/download/">https://www.rstudio.com/products/rstudio/download/&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="dependencies-of-r-packages">Dependencies of R packages&lt;/h2>
&lt;pre>&lt;code class="language-bash"># &amp;quot;devtools&amp;quot;:
sudo apt install libcurl4-openssl-dev libssl-dev libxml2-dev
#&amp;quot;rgl&amp;quot;
sudo apt install libcgal-dev libglu1-mesa-dev libglu1-mesa-dev libfreetype6-dev
# &amp;quot;rattle&amp;quot;:
sudo apt install libcanberra-gtk-module
sudo apt install wajig
wajig install libgtk2.0-dev libxml2-dev
# &amp;quot;cairo&amp;quot;:
sudo apt-get install libcairo2-dev
# &amp;quot;sbrl&amp;quot;
sudo apt install libgsl-dev
&lt;/code>&lt;/pre>
&lt;h2 id="rweka">RWeka:&lt;/h2>
&lt;pre>&lt;code class="language-bash">java –version
sudo apt install default-jre default-jdk
javac -version
&lt;/code>&lt;/pre>
&lt;h2 id="archive">Archive:&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.r-bloggers.com/why-is-r-slow-some-explanations-and-mklopenblas-setup-to-try-to-fix-this/">https://www.r-bloggers.com/why-is-r-slow-some-explanations-and-mklopenblas-setup-to-try-to-fix-this/&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>TLP – Linux Advanced Power Management</title><link>https://bodoburger.github.io/notes/ubuntu/tlp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bodoburger.github.io/notes/ubuntu/tlp/</guid><description>&lt;p>&lt;a href="http://thinkwiki.de/TLP_-_Linux_Stromsparen">http://thinkwiki.de/TLP_-_Linux_Stromsparen&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://linrunner.de">https://linrunner.de&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://linrunner.de/tlp/installation/ubuntu.html">https://linrunner.de/tlp/installation/ubuntu.html&lt;/a>&lt;/p>
&lt;pre>&lt;code class="language-bash">sudo apt install tlp tlp-rdw
# for Thinkpads
tlp-stat -b #suggest which additional package to install
sudo apt install acpi-call-dkms
# bluetooth off at startup:
sudo nano /etc/tlp.conf
DEVICES_TO_DISABLE_ON_STARTUP=&amp;quot;bluetooth&amp;quot;
# Akku-Ladeschwellen vorübergehend auf Maximum setzen
sudo tlp fullcharge [ BAT0 | BAT1 ]
# Akku einmalig bis zur oberen Schwelle laden
sudo tlp chargeonce [ BAT0 | BAT1 ]
&lt;/code>&lt;/pre></description></item><item><title>USB storage</title><link>https://bodoburger.github.io/notes/ubuntu/usb-storage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bodoburger.github.io/notes/ubuntu/usb-storage/</guid><description>&lt;h2 id="mount">Mount&lt;/h2>
&lt;p>&lt;code>sudo mount -o remount,rw /media/&amp;lt;storage-name&amp;gt;&lt;/code>&lt;/p>
&lt;h2 id="error-cant-format-usb-storage">Error: &lt;em>Can&amp;rsquo;t format USB storage&lt;/em>&lt;/h2>
&lt;p>I got this fixed by doing the following&lt;/p>
&lt;p>Type disks and launch the program,
select the disk or drive you want to format,
press CTRL+F and click format.&lt;/p>
&lt;p>After formatting, the disk or drive would be unallocated, therefore you&amp;rsquo;ll have to create a partition by using the plus button on the screen.. Then insert the name you&amp;rsquo;ll like to use as the drive or disk name then click on create. Enjoy&amp;hellip;.&lt;/p>
&lt;p>&lt;a href="https://askubuntu.com/questions/769079/cant-format-ubuntu-installation-stick/769094">https://askubuntu.com/questions/769079/cant-format-ubuntu-installation-stick/769094&lt;/a>&lt;/p></description></item><item><title>Slicing / selecting data with Pandas</title><link>https://bodoburger.github.io/post/2020-04-pandas-slicing/</link><pubDate>Tue, 10 Dec 2019 00:00:00 +0000</pubDate><guid>https://bodoburger.github.io/post/2020-04-pandas-slicing/</guid><description>&lt;!-- to create the markdown file from the jupyter notebook execute the following: -->
&lt;!-- jupyter nbconvert index.ipynb --to markdown --NbConvertApp.output_files_dir=. -->
&lt;details class="toc-inpage d-print-none " open>
&lt;summary class="font-weight-bold">Table of Contents&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#introduction">Introduction&lt;/a>&lt;/li>
&lt;li>&lt;a href="#square-brackets">square brackets&lt;/a>&lt;/li>
&lt;li>&lt;a href="#loc-method">&lt;code>loc&lt;/code> method&lt;/a>&lt;/li>
&lt;li>&lt;a href="#iloc-method">&lt;code>iloc&lt;/code> method&lt;/a>&lt;/li>
&lt;li>&lt;a href="#query-method">&lt;code>query&lt;/code> method&lt;/a>&lt;/li>
&lt;li>&lt;a href="#miscellaneous">Miscellaneous&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#filter-method">&lt;code>filter&lt;/code> method&lt;/a>&lt;/li>
&lt;li>&lt;a href="#select-a-column-using-">Select a column using &lt;code>.&lt;/code>&lt;/a>&lt;/li>
&lt;li>&lt;a href="#at--iat-methods">at / iat methods&lt;/a>&lt;/li>
&lt;li>&lt;a href="#ix-method">ix method&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#resources">Resources&lt;/a>&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Coming from &lt;strong>R&lt;/strong>, selecting parts of a data frame with Pandas was confusing for me
because there seemed to be so many different ways to do the same task.&lt;/p>
&lt;p>The &lt;a href="https://pandas.pydata.org/Pandas_Cheat_Sheet.pdf" target="_blank" rel="noopener">Pandas cheat sheet&lt;/a> is a good reminder to all the possible ways to select data. This article gives a little context to all of them.
I will go through the most common cases you will face in a day-to-day data-sciency application.&lt;/p>
&lt;p>I will assume that you already know that there are two basic data types in &lt;strong>Pandas&lt;/strong>,
the &lt;a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.html" target="_blank" rel="noopener">Series&lt;/a>
and the &lt;a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html" target="_blank" rel="noopener">DataFrame&lt;/a>.
The first one is a one-dimensional array of values of the same data type, the second one is a two-dimensional array consisting of multiple &lt;code>Series&lt;/code> of the same length.&lt;/p>
&lt;p>There are three main operators / methods to access parts of a &lt;code>DataFrame&lt;/code>:&lt;/p>
&lt;ul>
&lt;li>square brackets &lt;code>my_df[...]&lt;/code>&lt;/li>
&lt;li>method &lt;code>my_df.loc[...]&lt;/code>&lt;/li>
&lt;li>method &lt;code>my_df.iloc[...]&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>And then there is the &lt;code>query&lt;/code> method which is also very handy.&lt;/p>
&lt;p>In the following we will look at all these methods in detail.
Before we do that we load some example data from the &lt;strong>scikit-learn&lt;/strong> library and convert it to a Pandas dataframe.&lt;/p>
&lt;pre>&lt;code class="language-python">import pandas as pd
from sklearn import datasets
boston_data = datasets.load_boston()
boston_data.keys()
&lt;/code>&lt;/pre>
&lt;pre>&lt;code>dict_keys(['data', 'target', 'feature_names', 'DESCR', 'filename'])
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-python">df = pd.DataFrame(boston_data['data'], columns=boston_data['feature_names'])
df['MEDV'] = boston_data['target']
df
&lt;/code>&lt;/pre>
&lt;div>
&lt;style scoped>
.dataframe tbody tr th:only-of-type {
vertical-align: middle;
}
&lt;pre>&lt;code>.dataframe tbody tr th {
vertical-align: top;
}
.dataframe thead th {
text-align: right;
}
&lt;/code>&lt;/pre>
&lt;p>&lt;/style>&lt;/p>
&lt;table border="1" class="dataframe">
&lt;thead>
&lt;tr style="text-align: right;">
&lt;th>&lt;/th>
&lt;th>CRIM&lt;/th>
&lt;th>ZN&lt;/th>
&lt;th>INDUS&lt;/th>
&lt;th>CHAS&lt;/th>
&lt;th>NOX&lt;/th>
&lt;th>RM&lt;/th>
&lt;th>AGE&lt;/th>
&lt;th>DIS&lt;/th>
&lt;th>RAD&lt;/th>
&lt;th>TAX&lt;/th>
&lt;th>PTRATIO&lt;/th>
&lt;th>B&lt;/th>
&lt;th>LSTAT&lt;/th>
&lt;th>MEDV&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;th>0&lt;/th>
&lt;td>0.00632&lt;/td>
&lt;td>18.0&lt;/td>
&lt;td>2.31&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.538&lt;/td>
&lt;td>6.575&lt;/td>
&lt;td>65.2&lt;/td>
&lt;td>4.0900&lt;/td>
&lt;td>1.0&lt;/td>
&lt;td>296.0&lt;/td>
&lt;td>15.3&lt;/td>
&lt;td>396.90&lt;/td>
&lt;td>4.98&lt;/td>
&lt;td>24.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>1&lt;/th>
&lt;td>0.02731&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>7.07&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.469&lt;/td>
&lt;td>6.421&lt;/td>
&lt;td>78.9&lt;/td>
&lt;td>4.9671&lt;/td>
&lt;td>2.0&lt;/td>
&lt;td>242.0&lt;/td>
&lt;td>17.8&lt;/td>
&lt;td>396.90&lt;/td>
&lt;td>9.14&lt;/td>
&lt;td>21.6&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>2&lt;/th>
&lt;td>0.02729&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>7.07&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.469&lt;/td>
&lt;td>7.185&lt;/td>
&lt;td>61.1&lt;/td>
&lt;td>4.9671&lt;/td>
&lt;td>2.0&lt;/td>
&lt;td>242.0&lt;/td>
&lt;td>17.8&lt;/td>
&lt;td>392.83&lt;/td>
&lt;td>4.03&lt;/td>
&lt;td>34.7&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>3&lt;/th>
&lt;td>0.03237&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>2.18&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.458&lt;/td>
&lt;td>6.998&lt;/td>
&lt;td>45.8&lt;/td>
&lt;td>6.0622&lt;/td>
&lt;td>3.0&lt;/td>
&lt;td>222.0&lt;/td>
&lt;td>18.7&lt;/td>
&lt;td>394.63&lt;/td>
&lt;td>2.94&lt;/td>
&lt;td>33.4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>4&lt;/th>
&lt;td>0.06905&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>2.18&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.458&lt;/td>
&lt;td>7.147&lt;/td>
&lt;td>54.2&lt;/td>
&lt;td>6.0622&lt;/td>
&lt;td>3.0&lt;/td>
&lt;td>222.0&lt;/td>
&lt;td>18.7&lt;/td>
&lt;td>396.90&lt;/td>
&lt;td>5.33&lt;/td>
&lt;td>36.2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>...&lt;/th>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>501&lt;/th>
&lt;td>0.06263&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>11.93&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.573&lt;/td>
&lt;td>6.593&lt;/td>
&lt;td>69.1&lt;/td>
&lt;td>2.4786&lt;/td>
&lt;td>1.0&lt;/td>
&lt;td>273.0&lt;/td>
&lt;td>21.0&lt;/td>
&lt;td>391.99&lt;/td>
&lt;td>9.67&lt;/td>
&lt;td>22.4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>502&lt;/th>
&lt;td>0.04527&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>11.93&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.573&lt;/td>
&lt;td>6.120&lt;/td>
&lt;td>76.7&lt;/td>
&lt;td>2.2875&lt;/td>
&lt;td>1.0&lt;/td>
&lt;td>273.0&lt;/td>
&lt;td>21.0&lt;/td>
&lt;td>396.90&lt;/td>
&lt;td>9.08&lt;/td>
&lt;td>20.6&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>503&lt;/th>
&lt;td>0.06076&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>11.93&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.573&lt;/td>
&lt;td>6.976&lt;/td>
&lt;td>91.0&lt;/td>
&lt;td>2.1675&lt;/td>
&lt;td>1.0&lt;/td>
&lt;td>273.0&lt;/td>
&lt;td>21.0&lt;/td>
&lt;td>396.90&lt;/td>
&lt;td>5.64&lt;/td>
&lt;td>23.9&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>504&lt;/th>
&lt;td>0.10959&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>11.93&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.573&lt;/td>
&lt;td>6.794&lt;/td>
&lt;td>89.3&lt;/td>
&lt;td>2.3889&lt;/td>
&lt;td>1.0&lt;/td>
&lt;td>273.0&lt;/td>
&lt;td>21.0&lt;/td>
&lt;td>393.45&lt;/td>
&lt;td>6.48&lt;/td>
&lt;td>22.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>505&lt;/th>
&lt;td>0.04741&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>11.93&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.573&lt;/td>
&lt;td>6.030&lt;/td>
&lt;td>80.8&lt;/td>
&lt;td>2.5050&lt;/td>
&lt;td>1.0&lt;/td>
&lt;td>273.0&lt;/td>
&lt;td>21.0&lt;/td>
&lt;td>396.90&lt;/td>
&lt;td>7.88&lt;/td>
&lt;td>11.9&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>506 rows × 14 columns&lt;/p>
&lt;/div>
&lt;p>Because the difference between the index values and positional values of rows is important (as we will see later on) we change the index values:&lt;/p>
&lt;pre>&lt;code class="language-python">df = df.set_index('i_' + df.index.map(str))
df
&lt;/code>&lt;/pre>
&lt;div>
&lt;style scoped>
.dataframe tbody tr th:only-of-type {
vertical-align: middle;
}
&lt;pre>&lt;code>.dataframe tbody tr th {
vertical-align: top;
}
.dataframe thead th {
text-align: right;
}
&lt;/code>&lt;/pre>
&lt;p>&lt;/style>&lt;/p>
&lt;table border="1" class="dataframe">
&lt;thead>
&lt;tr style="text-align: right;">
&lt;th>&lt;/th>
&lt;th>CRIM&lt;/th>
&lt;th>ZN&lt;/th>
&lt;th>INDUS&lt;/th>
&lt;th>CHAS&lt;/th>
&lt;th>NOX&lt;/th>
&lt;th>RM&lt;/th>
&lt;th>AGE&lt;/th>
&lt;th>DIS&lt;/th>
&lt;th>RAD&lt;/th>
&lt;th>TAX&lt;/th>
&lt;th>PTRATIO&lt;/th>
&lt;th>B&lt;/th>
&lt;th>LSTAT&lt;/th>
&lt;th>MEDV&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;th>i_0&lt;/th>
&lt;td>0.00632&lt;/td>
&lt;td>18.0&lt;/td>
&lt;td>2.31&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.538&lt;/td>
&lt;td>6.575&lt;/td>
&lt;td>65.2&lt;/td>
&lt;td>4.0900&lt;/td>
&lt;td>1.0&lt;/td>
&lt;td>296.0&lt;/td>
&lt;td>15.3&lt;/td>
&lt;td>396.90&lt;/td>
&lt;td>4.98&lt;/td>
&lt;td>24.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_1&lt;/th>
&lt;td>0.02731&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>7.07&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.469&lt;/td>
&lt;td>6.421&lt;/td>
&lt;td>78.9&lt;/td>
&lt;td>4.9671&lt;/td>
&lt;td>2.0&lt;/td>
&lt;td>242.0&lt;/td>
&lt;td>17.8&lt;/td>
&lt;td>396.90&lt;/td>
&lt;td>9.14&lt;/td>
&lt;td>21.6&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_2&lt;/th>
&lt;td>0.02729&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>7.07&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.469&lt;/td>
&lt;td>7.185&lt;/td>
&lt;td>61.1&lt;/td>
&lt;td>4.9671&lt;/td>
&lt;td>2.0&lt;/td>
&lt;td>242.0&lt;/td>
&lt;td>17.8&lt;/td>
&lt;td>392.83&lt;/td>
&lt;td>4.03&lt;/td>
&lt;td>34.7&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_3&lt;/th>
&lt;td>0.03237&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>2.18&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.458&lt;/td>
&lt;td>6.998&lt;/td>
&lt;td>45.8&lt;/td>
&lt;td>6.0622&lt;/td>
&lt;td>3.0&lt;/td>
&lt;td>222.0&lt;/td>
&lt;td>18.7&lt;/td>
&lt;td>394.63&lt;/td>
&lt;td>2.94&lt;/td>
&lt;td>33.4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_4&lt;/th>
&lt;td>0.06905&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>2.18&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.458&lt;/td>
&lt;td>7.147&lt;/td>
&lt;td>54.2&lt;/td>
&lt;td>6.0622&lt;/td>
&lt;td>3.0&lt;/td>
&lt;td>222.0&lt;/td>
&lt;td>18.7&lt;/td>
&lt;td>396.90&lt;/td>
&lt;td>5.33&lt;/td>
&lt;td>36.2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>...&lt;/th>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_501&lt;/th>
&lt;td>0.06263&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>11.93&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.573&lt;/td>
&lt;td>6.593&lt;/td>
&lt;td>69.1&lt;/td>
&lt;td>2.4786&lt;/td>
&lt;td>1.0&lt;/td>
&lt;td>273.0&lt;/td>
&lt;td>21.0&lt;/td>
&lt;td>391.99&lt;/td>
&lt;td>9.67&lt;/td>
&lt;td>22.4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_502&lt;/th>
&lt;td>0.04527&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>11.93&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.573&lt;/td>
&lt;td>6.120&lt;/td>
&lt;td>76.7&lt;/td>
&lt;td>2.2875&lt;/td>
&lt;td>1.0&lt;/td>
&lt;td>273.0&lt;/td>
&lt;td>21.0&lt;/td>
&lt;td>396.90&lt;/td>
&lt;td>9.08&lt;/td>
&lt;td>20.6&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_503&lt;/th>
&lt;td>0.06076&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>11.93&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.573&lt;/td>
&lt;td>6.976&lt;/td>
&lt;td>91.0&lt;/td>
&lt;td>2.1675&lt;/td>
&lt;td>1.0&lt;/td>
&lt;td>273.0&lt;/td>
&lt;td>21.0&lt;/td>
&lt;td>396.90&lt;/td>
&lt;td>5.64&lt;/td>
&lt;td>23.9&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_504&lt;/th>
&lt;td>0.10959&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>11.93&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.573&lt;/td>
&lt;td>6.794&lt;/td>
&lt;td>89.3&lt;/td>
&lt;td>2.3889&lt;/td>
&lt;td>1.0&lt;/td>
&lt;td>273.0&lt;/td>
&lt;td>21.0&lt;/td>
&lt;td>393.45&lt;/td>
&lt;td>6.48&lt;/td>
&lt;td>22.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_505&lt;/th>
&lt;td>0.04741&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>11.93&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.573&lt;/td>
&lt;td>6.030&lt;/td>
&lt;td>80.8&lt;/td>
&lt;td>2.5050&lt;/td>
&lt;td>1.0&lt;/td>
&lt;td>273.0&lt;/td>
&lt;td>21.0&lt;/td>
&lt;td>396.90&lt;/td>
&lt;td>7.88&lt;/td>
&lt;td>11.9&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>506 rows × 14 columns&lt;/p>
&lt;/div>
&lt;h2 id="square-brackets">square brackets&lt;/h2>
&lt;p>The square brackets operator that is also used in Python for accessing parts of a &lt;code>list&lt;/code>, a &lt;code>string&lt;/code> or a &lt;code>dict&lt;/code> can be used to select both a single or multiple columns and rows of a &lt;code>DataFrame&lt;/code>.&lt;/p>
&lt;p>To select a single column you have to refer to it by its name:&lt;/p>
&lt;pre>&lt;code class="language-python">df['CRIM']
&lt;/code>&lt;/pre>
&lt;pre>&lt;code>i_0 0.00632
i_1 0.02731
i_2 0.02729
i_3 0.03237
i_4 0.06905
...
i_501 0.06263
i_502 0.04527
i_503 0.06076
i_504 0.10959
i_505 0.04741
Name: CRIM, Length: 506, dtype: float64
&lt;/code>&lt;/pre>
&lt;p>Notice that the result is a &lt;code>Series&lt;/code>. We can check this by typing&lt;/p>
&lt;pre>&lt;code class="language-python">type(df['CRIM'])
&lt;/code>&lt;/pre>
&lt;pre>&lt;code>pandas.core.series.Series
&lt;/code>&lt;/pre>
&lt;p>To select multiple columns you refer to them by a list of their names:&lt;/p>
&lt;pre>&lt;code class="language-python">df[['CRIM', 'INDUS']]
&lt;/code>&lt;/pre>
&lt;div>
&lt;style scoped>
.dataframe tbody tr th:only-of-type {
vertical-align: middle;
}
&lt;pre>&lt;code>.dataframe tbody tr th {
vertical-align: top;
}
.dataframe thead th {
text-align: right;
}
&lt;/code>&lt;/pre>
&lt;p>&lt;/style>&lt;/p>
&lt;table border="1" class="dataframe">
&lt;thead>
&lt;tr style="text-align: right;">
&lt;th>&lt;/th>
&lt;th>CRIM&lt;/th>
&lt;th>INDUS&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;th>i_0&lt;/th>
&lt;td>0.00632&lt;/td>
&lt;td>2.31&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_1&lt;/th>
&lt;td>0.02731&lt;/td>
&lt;td>7.07&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_2&lt;/th>
&lt;td>0.02729&lt;/td>
&lt;td>7.07&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_3&lt;/th>
&lt;td>0.03237&lt;/td>
&lt;td>2.18&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_4&lt;/th>
&lt;td>0.06905&lt;/td>
&lt;td>2.18&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>...&lt;/th>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_501&lt;/th>
&lt;td>0.06263&lt;/td>
&lt;td>11.93&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_502&lt;/th>
&lt;td>0.04527&lt;/td>
&lt;td>11.93&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_503&lt;/th>
&lt;td>0.06076&lt;/td>
&lt;td>11.93&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_504&lt;/th>
&lt;td>0.10959&lt;/td>
&lt;td>11.93&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_505&lt;/th>
&lt;td>0.04741&lt;/td>
&lt;td>11.93&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>506 rows × 2 columns&lt;/p>
&lt;/div>
&lt;p>The result is a &lt;code>DataFrame&lt;/code>, even if the list contains only one column name.&lt;/p>
&lt;p>We can select rows using square brackets in the same way you can select elements of a &lt;code>list&lt;/code> by refering to their positional values. E.g. to select the first three rows, we write:&lt;/p>
&lt;pre>&lt;code class="language-python">df[0:3]
&lt;/code>&lt;/pre>
&lt;div>
&lt;style scoped>
.dataframe tbody tr th:only-of-type {
vertical-align: middle;
}
&lt;pre>&lt;code>.dataframe tbody tr th {
vertical-align: top;
}
.dataframe thead th {
text-align: right;
}
&lt;/code>&lt;/pre>
&lt;p>&lt;/style>&lt;/p>
&lt;table border="1" class="dataframe">
&lt;thead>
&lt;tr style="text-align: right;">
&lt;th>&lt;/th>
&lt;th>CRIM&lt;/th>
&lt;th>ZN&lt;/th>
&lt;th>INDUS&lt;/th>
&lt;th>CHAS&lt;/th>
&lt;th>NOX&lt;/th>
&lt;th>RM&lt;/th>
&lt;th>AGE&lt;/th>
&lt;th>DIS&lt;/th>
&lt;th>RAD&lt;/th>
&lt;th>TAX&lt;/th>
&lt;th>PTRATIO&lt;/th>
&lt;th>B&lt;/th>
&lt;th>LSTAT&lt;/th>
&lt;th>MEDV&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;th>i_0&lt;/th>
&lt;td>0.00632&lt;/td>
&lt;td>18.0&lt;/td>
&lt;td>2.31&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.538&lt;/td>
&lt;td>6.575&lt;/td>
&lt;td>65.2&lt;/td>
&lt;td>4.0900&lt;/td>
&lt;td>1.0&lt;/td>
&lt;td>296.0&lt;/td>
&lt;td>15.3&lt;/td>
&lt;td>396.90&lt;/td>
&lt;td>4.98&lt;/td>
&lt;td>24.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_1&lt;/th>
&lt;td>0.02731&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>7.07&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.469&lt;/td>
&lt;td>6.421&lt;/td>
&lt;td>78.9&lt;/td>
&lt;td>4.9671&lt;/td>
&lt;td>2.0&lt;/td>
&lt;td>242.0&lt;/td>
&lt;td>17.8&lt;/td>
&lt;td>396.90&lt;/td>
&lt;td>9.14&lt;/td>
&lt;td>21.6&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_2&lt;/th>
&lt;td>0.02729&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>7.07&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.469&lt;/td>
&lt;td>7.185&lt;/td>
&lt;td>61.1&lt;/td>
&lt;td>4.9671&lt;/td>
&lt;td>2.0&lt;/td>
&lt;td>242.0&lt;/td>
&lt;td>17.8&lt;/td>
&lt;td>392.83&lt;/td>
&lt;td>4.03&lt;/td>
&lt;td>34.7&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;p>This also works by refering to row names, like this:&lt;/p>
&lt;pre>&lt;code class="language-python">df['i_0':'i_2']
&lt;/code>&lt;/pre>
&lt;div>
&lt;style scoped>
.dataframe tbody tr th:only-of-type {
vertical-align: middle;
}
&lt;pre>&lt;code>.dataframe tbody tr th {
vertical-align: top;
}
.dataframe thead th {
text-align: right;
}
&lt;/code>&lt;/pre>
&lt;p>&lt;/style>&lt;/p>
&lt;table border="1" class="dataframe">
&lt;thead>
&lt;tr style="text-align: right;">
&lt;th>&lt;/th>
&lt;th>CRIM&lt;/th>
&lt;th>ZN&lt;/th>
&lt;th>INDUS&lt;/th>
&lt;th>CHAS&lt;/th>
&lt;th>NOX&lt;/th>
&lt;th>RM&lt;/th>
&lt;th>AGE&lt;/th>
&lt;th>DIS&lt;/th>
&lt;th>RAD&lt;/th>
&lt;th>TAX&lt;/th>
&lt;th>PTRATIO&lt;/th>
&lt;th>B&lt;/th>
&lt;th>LSTAT&lt;/th>
&lt;th>MEDV&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;th>i_0&lt;/th>
&lt;td>0.00632&lt;/td>
&lt;td>18.0&lt;/td>
&lt;td>2.31&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.538&lt;/td>
&lt;td>6.575&lt;/td>
&lt;td>65.2&lt;/td>
&lt;td>4.0900&lt;/td>
&lt;td>1.0&lt;/td>
&lt;td>296.0&lt;/td>
&lt;td>15.3&lt;/td>
&lt;td>396.90&lt;/td>
&lt;td>4.98&lt;/td>
&lt;td>24.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_1&lt;/th>
&lt;td>0.02731&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>7.07&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.469&lt;/td>
&lt;td>6.421&lt;/td>
&lt;td>78.9&lt;/td>
&lt;td>4.9671&lt;/td>
&lt;td>2.0&lt;/td>
&lt;td>242.0&lt;/td>
&lt;td>17.8&lt;/td>
&lt;td>396.90&lt;/td>
&lt;td>9.14&lt;/td>
&lt;td>21.6&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_2&lt;/th>
&lt;td>0.02729&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>7.07&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.469&lt;/td>
&lt;td>7.185&lt;/td>
&lt;td>61.1&lt;/td>
&lt;td>4.9671&lt;/td>
&lt;td>2.0&lt;/td>
&lt;td>242.0&lt;/td>
&lt;td>17.8&lt;/td>
&lt;td>392.83&lt;/td>
&lt;td>4.03&lt;/td>
&lt;td>34.7&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;p>Notice the slightly different logic (the last element we reference &lt;code>i_2&lt;/code> is included) compared to the slicing method using integers.&lt;/p>
&lt;p>We can also leave one side of the colon empty to refer to the first or last row, like this:&lt;/p>
&lt;pre>&lt;code class="language-python">df[:'i_2']
&lt;/code>&lt;/pre>
&lt;div>
&lt;style scoped>
.dataframe tbody tr th:only-of-type {
vertical-align: middle;
}
&lt;pre>&lt;code>.dataframe tbody tr th {
vertical-align: top;
}
.dataframe thead th {
text-align: right;
}
&lt;/code>&lt;/pre>
&lt;p>&lt;/style>&lt;/p>
&lt;table border="1" class="dataframe">
&lt;thead>
&lt;tr style="text-align: right;">
&lt;th>&lt;/th>
&lt;th>CRIM&lt;/th>
&lt;th>ZN&lt;/th>
&lt;th>INDUS&lt;/th>
&lt;th>CHAS&lt;/th>
&lt;th>NOX&lt;/th>
&lt;th>RM&lt;/th>
&lt;th>AGE&lt;/th>
&lt;th>DIS&lt;/th>
&lt;th>RAD&lt;/th>
&lt;th>TAX&lt;/th>
&lt;th>PTRATIO&lt;/th>
&lt;th>B&lt;/th>
&lt;th>LSTAT&lt;/th>
&lt;th>MEDV&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;th>i_0&lt;/th>
&lt;td>0.00632&lt;/td>
&lt;td>18.0&lt;/td>
&lt;td>2.31&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.538&lt;/td>
&lt;td>6.575&lt;/td>
&lt;td>65.2&lt;/td>
&lt;td>4.0900&lt;/td>
&lt;td>1.0&lt;/td>
&lt;td>296.0&lt;/td>
&lt;td>15.3&lt;/td>
&lt;td>396.90&lt;/td>
&lt;td>4.98&lt;/td>
&lt;td>24.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_1&lt;/th>
&lt;td>0.02731&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>7.07&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.469&lt;/td>
&lt;td>6.421&lt;/td>
&lt;td>78.9&lt;/td>
&lt;td>4.9671&lt;/td>
&lt;td>2.0&lt;/td>
&lt;td>242.0&lt;/td>
&lt;td>17.8&lt;/td>
&lt;td>396.90&lt;/td>
&lt;td>9.14&lt;/td>
&lt;td>21.6&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_2&lt;/th>
&lt;td>0.02729&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>7.07&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.469&lt;/td>
&lt;td>7.185&lt;/td>
&lt;td>61.1&lt;/td>
&lt;td>4.9671&lt;/td>
&lt;td>2.0&lt;/td>
&lt;td>242.0&lt;/td>
&lt;td>17.8&lt;/td>
&lt;td>392.83&lt;/td>
&lt;td>4.03&lt;/td>
&lt;td>34.7&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;p>Another way to select multiple rows is using a condition. We have to provide a &lt;code>Series&lt;/code> or &lt;code>list&lt;/code> of type &lt;code>bool&lt;/code> with the same length as the number of rows. This is often used to condition on the values of a column in the same &lt;code>DataFrame&lt;/code>, like this:&lt;/p>
&lt;pre>&lt;code class="language-python">df[df['INDUS'] &amp;gt; 27]
&lt;/code>&lt;/pre>
&lt;div>
&lt;style scoped>
.dataframe tbody tr th:only-of-type {
vertical-align: middle;
}
&lt;pre>&lt;code>.dataframe tbody tr th {
vertical-align: top;
}
.dataframe thead th {
text-align: right;
}
&lt;/code>&lt;/pre>
&lt;p>&lt;/style>&lt;/p>
&lt;table border="1" class="dataframe">
&lt;thead>
&lt;tr style="text-align: right;">
&lt;th>&lt;/th>
&lt;th>CRIM&lt;/th>
&lt;th>ZN&lt;/th>
&lt;th>INDUS&lt;/th>
&lt;th>CHAS&lt;/th>
&lt;th>NOX&lt;/th>
&lt;th>RM&lt;/th>
&lt;th>AGE&lt;/th>
&lt;th>DIS&lt;/th>
&lt;th>RAD&lt;/th>
&lt;th>TAX&lt;/th>
&lt;th>PTRATIO&lt;/th>
&lt;th>B&lt;/th>
&lt;th>LSTAT&lt;/th>
&lt;th>MEDV&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;th>i_488&lt;/th>
&lt;td>0.15086&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>27.74&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.609&lt;/td>
&lt;td>5.454&lt;/td>
&lt;td>92.7&lt;/td>
&lt;td>1.8209&lt;/td>
&lt;td>4.0&lt;/td>
&lt;td>711.0&lt;/td>
&lt;td>20.1&lt;/td>
&lt;td>395.09&lt;/td>
&lt;td>18.06&lt;/td>
&lt;td>15.2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_489&lt;/th>
&lt;td>0.18337&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>27.74&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.609&lt;/td>
&lt;td>5.414&lt;/td>
&lt;td>98.3&lt;/td>
&lt;td>1.7554&lt;/td>
&lt;td>4.0&lt;/td>
&lt;td>711.0&lt;/td>
&lt;td>20.1&lt;/td>
&lt;td>344.05&lt;/td>
&lt;td>23.97&lt;/td>
&lt;td>7.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_490&lt;/th>
&lt;td>0.20746&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>27.74&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.609&lt;/td>
&lt;td>5.093&lt;/td>
&lt;td>98.0&lt;/td>
&lt;td>1.8226&lt;/td>
&lt;td>4.0&lt;/td>
&lt;td>711.0&lt;/td>
&lt;td>20.1&lt;/td>
&lt;td>318.43&lt;/td>
&lt;td>29.68&lt;/td>
&lt;td>8.1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_491&lt;/th>
&lt;td>0.10574&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>27.74&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.609&lt;/td>
&lt;td>5.983&lt;/td>
&lt;td>98.8&lt;/td>
&lt;td>1.8681&lt;/td>
&lt;td>4.0&lt;/td>
&lt;td>711.0&lt;/td>
&lt;td>20.1&lt;/td>
&lt;td>390.11&lt;/td>
&lt;td>18.07&lt;/td>
&lt;td>13.6&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_492&lt;/th>
&lt;td>0.11132&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>27.74&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.609&lt;/td>
&lt;td>5.983&lt;/td>
&lt;td>83.5&lt;/td>
&lt;td>2.1099&lt;/td>
&lt;td>4.0&lt;/td>
&lt;td>711.0&lt;/td>
&lt;td>20.1&lt;/td>
&lt;td>396.90&lt;/td>
&lt;td>13.35&lt;/td>
&lt;td>20.1&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;p>As we can see whether we select columns or rows depends on the type of input.
Because of this the square brackets operator can be confusing at the beginning.
Furthermore, we can&amp;rsquo;t select specific columns and rows at once,
as we might be expect coming from &lt;strong>R&lt;/strong>.&lt;/p>
&lt;h2 id="loc-method">&lt;code>loc&lt;/code> method&lt;/h2>
&lt;p>The &lt;code>loc&lt;/code> method expects references by name both to rows and columns.&lt;/p>
&lt;pre>&lt;code class="language-python">df.loc['i_2', 'CRIM']
&lt;/code>&lt;/pre>
&lt;pre>&lt;code>0.02729
&lt;/code>&lt;/pre>
&lt;p>To select multiple rows and columns, we put their respective names in a &lt;code>list&lt;/code>:&lt;/p>
&lt;pre>&lt;code class="language-python">df.loc[['i_0', 'i_2'], ['CRIM', 'INDUS']]
&lt;/code>&lt;/pre>
&lt;div>
&lt;style scoped>
.dataframe tbody tr th:only-of-type {
vertical-align: middle;
}
&lt;pre>&lt;code>.dataframe tbody tr th {
vertical-align: top;
}
.dataframe thead th {
text-align: right;
}
&lt;/code>&lt;/pre>
&lt;p>&lt;/style>&lt;/p>
&lt;table border="1" class="dataframe">
&lt;thead>
&lt;tr style="text-align: right;">
&lt;th>&lt;/th>
&lt;th>CRIM&lt;/th>
&lt;th>INDUS&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;th>i_0&lt;/th>
&lt;td>0.00632&lt;/td>
&lt;td>2.31&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_2&lt;/th>
&lt;td>0.02729&lt;/td>
&lt;td>7.07&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;p>We can refer to a range of rows or columns using a colon, like this:&lt;/p>
&lt;pre>&lt;code class="language-python">df.loc['i_4':'i_5', 'CRIM':'INDUS']
&lt;/code>&lt;/pre>
&lt;div>
&lt;style scoped>
.dataframe tbody tr th:only-of-type {
vertical-align: middle;
}
&lt;pre>&lt;code>.dataframe tbody tr th {
vertical-align: top;
}
.dataframe thead th {
text-align: right;
}
&lt;/code>&lt;/pre>
&lt;p>&lt;/style>&lt;/p>
&lt;table border="1" class="dataframe">
&lt;thead>
&lt;tr style="text-align: right;">
&lt;th>&lt;/th>
&lt;th>CRIM&lt;/th>
&lt;th>ZN&lt;/th>
&lt;th>INDUS&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;th>i_4&lt;/th>
&lt;td>0.06905&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>2.18&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_5&lt;/th>
&lt;td>0.02985&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>2.18&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;p>Or mix both methods:&lt;/p>
&lt;pre>&lt;code class="language-python">df.loc[['i_0','i_2'], 'CRIM':'INDUS']
&lt;/code>&lt;/pre>
&lt;div>
&lt;style scoped>
.dataframe tbody tr th:only-of-type {
vertical-align: middle;
}
&lt;pre>&lt;code>.dataframe tbody tr th {
vertical-align: top;
}
.dataframe thead th {
text-align: right;
}
&lt;/code>&lt;/pre>
&lt;p>&lt;/style>&lt;/p>
&lt;table border="1" class="dataframe">
&lt;thead>
&lt;tr style="text-align: right;">
&lt;th>&lt;/th>
&lt;th>CRIM&lt;/th>
&lt;th>ZN&lt;/th>
&lt;th>INDUS&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;th>i_0&lt;/th>
&lt;td>0.00632&lt;/td>
&lt;td>18.0&lt;/td>
&lt;td>2.31&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_2&lt;/th>
&lt;td>0.02729&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>7.07&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;p>If we select only a single row or column the result is a &lt;code>Series&lt;/code>:&lt;/p>
&lt;pre>&lt;code class="language-python">df.loc['i_5', 'CRIM':'INDUS']
&lt;/code>&lt;/pre>
&lt;pre>&lt;code>CRIM 0.02985
ZN 0.00000
INDUS 2.18000
Name: i_5, dtype: float64
&lt;/code>&lt;/pre>
&lt;p>If we want to select all rows or columns we leave both sides of the colon empty:&lt;/p>
&lt;pre>&lt;code class="language-python">df.loc['i_5', :]
&lt;/code>&lt;/pre>
&lt;pre>&lt;code>CRIM 0.02985
ZN 0.00000
INDUS 2.18000
CHAS 0.00000
NOX 0.45800
RM 6.43000
AGE 58.70000
DIS 6.06220
RAD 3.00000
TAX 222.00000
PTRATIO 18.70000
B 394.12000
LSTAT 5.21000
MEDV 28.70000
Name: i_5, dtype: float64
&lt;/code>&lt;/pre>
&lt;p>With the &lt;code>loc&lt;/code> method we can also also restrict the selection of rows using a condition:&lt;/p>
&lt;pre>&lt;code class="language-python">df.loc[df['INDUS'] &amp;gt; 27, 'CRIM':'CHAS']
&lt;/code>&lt;/pre>
&lt;div>
&lt;style scoped>
.dataframe tbody tr th:only-of-type {
vertical-align: middle;
}
&lt;pre>&lt;code>.dataframe tbody tr th {
vertical-align: top;
}
.dataframe thead th {
text-align: right;
}
&lt;/code>&lt;/pre>
&lt;p>&lt;/style>&lt;/p>
&lt;table border="1" class="dataframe">
&lt;thead>
&lt;tr style="text-align: right;">
&lt;th>&lt;/th>
&lt;th>CRIM&lt;/th>
&lt;th>ZN&lt;/th>
&lt;th>INDUS&lt;/th>
&lt;th>CHAS&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;th>i_488&lt;/th>
&lt;td>0.15086&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>27.74&lt;/td>
&lt;td>0.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_489&lt;/th>
&lt;td>0.18337&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>27.74&lt;/td>
&lt;td>0.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_490&lt;/th>
&lt;td>0.20746&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>27.74&lt;/td>
&lt;td>0.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_491&lt;/th>
&lt;td>0.10574&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>27.74&lt;/td>
&lt;td>0.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_492&lt;/th>
&lt;td>0.11132&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>27.74&lt;/td>
&lt;td>0.0&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;h2 id="iloc-method">&lt;code>iloc&lt;/code> method&lt;/h2>
&lt;p>Using the &lt;code>iloc&lt;/code> method we can refer to rows and columns by their positional value. To get the third row we type&lt;/p>
&lt;pre>&lt;code class="language-python">df.iloc[2]
&lt;/code>&lt;/pre>
&lt;pre>&lt;code>CRIM 0.02729
ZN 0.00000
INDUS 7.07000
CHAS 0.00000
NOX 0.46900
RM 7.18500
AGE 61.10000
DIS 4.96710
RAD 2.00000
TAX 242.00000
PTRATIO 17.80000
B 392.83000
LSTAT 4.03000
MEDV 34.70000
Name: i_2, dtype: float64
&lt;/code>&lt;/pre>
&lt;p>The result is a &lt;code>Series&lt;/code>. Multiple rows can be selected using a list&lt;/p>
&lt;pre>&lt;code class="language-python">df.iloc[[2,4]]
&lt;/code>&lt;/pre>
&lt;div>
&lt;style scoped>
.dataframe tbody tr th:only-of-type {
vertical-align: middle;
}
&lt;pre>&lt;code>.dataframe tbody tr th {
vertical-align: top;
}
.dataframe thead th {
text-align: right;
}
&lt;/code>&lt;/pre>
&lt;p>&lt;/style>&lt;/p>
&lt;table border="1" class="dataframe">
&lt;thead>
&lt;tr style="text-align: right;">
&lt;th>&lt;/th>
&lt;th>CRIM&lt;/th>
&lt;th>ZN&lt;/th>
&lt;th>INDUS&lt;/th>
&lt;th>CHAS&lt;/th>
&lt;th>NOX&lt;/th>
&lt;th>RM&lt;/th>
&lt;th>AGE&lt;/th>
&lt;th>DIS&lt;/th>
&lt;th>RAD&lt;/th>
&lt;th>TAX&lt;/th>
&lt;th>PTRATIO&lt;/th>
&lt;th>B&lt;/th>
&lt;th>LSTAT&lt;/th>
&lt;th>MEDV&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;th>i_2&lt;/th>
&lt;td>0.02729&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>7.07&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.469&lt;/td>
&lt;td>7.185&lt;/td>
&lt;td>61.1&lt;/td>
&lt;td>4.9671&lt;/td>
&lt;td>2.0&lt;/td>
&lt;td>242.0&lt;/td>
&lt;td>17.8&lt;/td>
&lt;td>392.83&lt;/td>
&lt;td>4.03&lt;/td>
&lt;td>34.7&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_4&lt;/th>
&lt;td>0.06905&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>2.18&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.458&lt;/td>
&lt;td>7.147&lt;/td>
&lt;td>54.2&lt;/td>
&lt;td>6.0622&lt;/td>
&lt;td>3.0&lt;/td>
&lt;td>222.0&lt;/td>
&lt;td>18.7&lt;/td>
&lt;td>396.90&lt;/td>
&lt;td>5.33&lt;/td>
&lt;td>36.2&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;p>or, for a range of rows, using the familiar slicing syntax:&lt;/p>
&lt;pre>&lt;code class="language-python">df.iloc[2:4]
&lt;/code>&lt;/pre>
&lt;div>
&lt;style scoped>
.dataframe tbody tr th:only-of-type {
vertical-align: middle;
}
&lt;pre>&lt;code>.dataframe tbody tr th {
vertical-align: top;
}
.dataframe thead th {
text-align: right;
}
&lt;/code>&lt;/pre>
&lt;p>&lt;/style>&lt;/p>
&lt;table border="1" class="dataframe">
&lt;thead>
&lt;tr style="text-align: right;">
&lt;th>&lt;/th>
&lt;th>CRIM&lt;/th>
&lt;th>ZN&lt;/th>
&lt;th>INDUS&lt;/th>
&lt;th>CHAS&lt;/th>
&lt;th>NOX&lt;/th>
&lt;th>RM&lt;/th>
&lt;th>AGE&lt;/th>
&lt;th>DIS&lt;/th>
&lt;th>RAD&lt;/th>
&lt;th>TAX&lt;/th>
&lt;th>PTRATIO&lt;/th>
&lt;th>B&lt;/th>
&lt;th>LSTAT&lt;/th>
&lt;th>MEDV&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;th>i_2&lt;/th>
&lt;td>0.02729&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>7.07&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.469&lt;/td>
&lt;td>7.185&lt;/td>
&lt;td>61.1&lt;/td>
&lt;td>4.9671&lt;/td>
&lt;td>2.0&lt;/td>
&lt;td>242.0&lt;/td>
&lt;td>17.8&lt;/td>
&lt;td>392.83&lt;/td>
&lt;td>4.03&lt;/td>
&lt;td>34.7&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_3&lt;/th>
&lt;td>0.03237&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>2.18&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.458&lt;/td>
&lt;td>6.998&lt;/td>
&lt;td>45.8&lt;/td>
&lt;td>6.0622&lt;/td>
&lt;td>3.0&lt;/td>
&lt;td>222.0&lt;/td>
&lt;td>18.7&lt;/td>
&lt;td>394.63&lt;/td>
&lt;td>2.94&lt;/td>
&lt;td>33.4&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;p>The result in both cases is a data frame (even if only one row is selected).&lt;/p>
&lt;p>This can be combined with a selection of columns using the respective positional values. To select only the second column we type&lt;/p>
&lt;pre>&lt;code class="language-python">df.iloc[2:4, 1]
&lt;/code>&lt;/pre>
&lt;pre>&lt;code>i_2 0.0
i_3 0.0
Name: ZN, dtype: float64
&lt;/code>&lt;/pre>
&lt;p>To select multiple columns we can use a &lt;code>list&lt;/code> or the slicing syntax:&lt;/p>
&lt;pre>&lt;code class="language-python">df.iloc[2:4, 1:3]
&lt;/code>&lt;/pre>
&lt;div>
&lt;style scoped>
.dataframe tbody tr th:only-of-type {
vertical-align: middle;
}
&lt;pre>&lt;code>.dataframe tbody tr th {
vertical-align: top;
}
.dataframe thead th {
text-align: right;
}
&lt;/code>&lt;/pre>
&lt;p>&lt;/style>&lt;/p>
&lt;table border="1" class="dataframe">
&lt;thead>
&lt;tr style="text-align: right;">
&lt;th>&lt;/th>
&lt;th>ZN&lt;/th>
&lt;th>INDUS&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;th>i_2&lt;/th>
&lt;td>0.0&lt;/td>
&lt;td>7.07&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_3&lt;/th>
&lt;td>0.0&lt;/td>
&lt;td>2.18&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;p>To select all rows or columns we leave sides of the colon empty:&lt;/p>
&lt;pre>&lt;code class="language-python">df.iloc[:, 1:3]
&lt;/code>&lt;/pre>
&lt;div>
&lt;style scoped>
.dataframe tbody tr th:only-of-type {
vertical-align: middle;
}
&lt;pre>&lt;code>.dataframe tbody tr th {
vertical-align: top;
}
.dataframe thead th {
text-align: right;
}
&lt;/code>&lt;/pre>
&lt;p>&lt;/style>&lt;/p>
&lt;table border="1" class="dataframe">
&lt;thead>
&lt;tr style="text-align: right;">
&lt;th>&lt;/th>
&lt;th>ZN&lt;/th>
&lt;th>INDUS&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;th>i_0&lt;/th>
&lt;td>18.0&lt;/td>
&lt;td>2.31&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_1&lt;/th>
&lt;td>0.0&lt;/td>
&lt;td>7.07&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_2&lt;/th>
&lt;td>0.0&lt;/td>
&lt;td>7.07&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_3&lt;/th>
&lt;td>0.0&lt;/td>
&lt;td>2.18&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_4&lt;/th>
&lt;td>0.0&lt;/td>
&lt;td>2.18&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>...&lt;/th>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_501&lt;/th>
&lt;td>0.0&lt;/td>
&lt;td>11.93&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_502&lt;/th>
&lt;td>0.0&lt;/td>
&lt;td>11.93&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_503&lt;/th>
&lt;td>0.0&lt;/td>
&lt;td>11.93&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_504&lt;/th>
&lt;td>0.0&lt;/td>
&lt;td>11.93&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_505&lt;/th>
&lt;td>0.0&lt;/td>
&lt;td>11.93&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>506 rows × 2 columns&lt;/p>
&lt;/div>
&lt;h2 id="query-method">&lt;code>query&lt;/code> method&lt;/h2>
&lt;p>The &lt;code>query&lt;/code> method allows for some very handy selection using an expression like this:&lt;/p>
&lt;pre>&lt;code class="language-python">df.query(&amp;quot;AGE &amp;lt; 7&amp;quot;)
&lt;/code>&lt;/pre>
&lt;div>
&lt;style scoped>
.dataframe tbody tr th:only-of-type {
vertical-align: middle;
}
&lt;pre>&lt;code>.dataframe tbody tr th {
vertical-align: top;
}
.dataframe thead th {
text-align: right;
}
&lt;/code>&lt;/pre>
&lt;p>&lt;/style>&lt;/p>
&lt;table border="1" class="dataframe">
&lt;thead>
&lt;tr style="text-align: right;">
&lt;th>&lt;/th>
&lt;th>CRIM&lt;/th>
&lt;th>ZN&lt;/th>
&lt;th>INDUS&lt;/th>
&lt;th>CHAS&lt;/th>
&lt;th>NOX&lt;/th>
&lt;th>RM&lt;/th>
&lt;th>AGE&lt;/th>
&lt;th>DIS&lt;/th>
&lt;th>RAD&lt;/th>
&lt;th>TAX&lt;/th>
&lt;th>PTRATIO&lt;/th>
&lt;th>B&lt;/th>
&lt;th>LSTAT&lt;/th>
&lt;th>MEDV&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;th>i_41&lt;/th>
&lt;td>0.12744&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>6.91&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.448&lt;/td>
&lt;td>6.770&lt;/td>
&lt;td>2.9&lt;/td>
&lt;td>5.7209&lt;/td>
&lt;td>3.0&lt;/td>
&lt;td>233.0&lt;/td>
&lt;td>17.9&lt;/td>
&lt;td>385.41&lt;/td>
&lt;td>4.84&lt;/td>
&lt;td>26.6&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_42&lt;/th>
&lt;td>0.14150&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>6.91&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.448&lt;/td>
&lt;td>6.169&lt;/td>
&lt;td>6.6&lt;/td>
&lt;td>5.7209&lt;/td>
&lt;td>3.0&lt;/td>
&lt;td>233.0&lt;/td>
&lt;td>17.9&lt;/td>
&lt;td>383.37&lt;/td>
&lt;td>5.81&lt;/td>
&lt;td>25.3&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_43&lt;/th>
&lt;td>0.15936&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>6.91&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.448&lt;/td>
&lt;td>6.211&lt;/td>
&lt;td>6.5&lt;/td>
&lt;td>5.7209&lt;/td>
&lt;td>3.0&lt;/td>
&lt;td>233.0&lt;/td>
&lt;td>17.9&lt;/td>
&lt;td>394.46&lt;/td>
&lt;td>7.44&lt;/td>
&lt;td>24.7&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_70&lt;/th>
&lt;td>0.08826&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>10.81&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.413&lt;/td>
&lt;td>6.417&lt;/td>
&lt;td>6.6&lt;/td>
&lt;td>5.2873&lt;/td>
&lt;td>4.0&lt;/td>
&lt;td>305.0&lt;/td>
&lt;td>19.2&lt;/td>
&lt;td>383.73&lt;/td>
&lt;td>6.72&lt;/td>
&lt;td>24.2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_73&lt;/th>
&lt;td>0.19539&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>10.81&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.413&lt;/td>
&lt;td>6.245&lt;/td>
&lt;td>6.2&lt;/td>
&lt;td>5.2873&lt;/td>
&lt;td>4.0&lt;/td>
&lt;td>305.0&lt;/td>
&lt;td>19.2&lt;/td>
&lt;td>377.17&lt;/td>
&lt;td>7.54&lt;/td>
&lt;td>23.4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_74&lt;/th>
&lt;td>0.07896&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>12.83&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.437&lt;/td>
&lt;td>6.273&lt;/td>
&lt;td>6.0&lt;/td>
&lt;td>4.2515&lt;/td>
&lt;td>5.0&lt;/td>
&lt;td>398.0&lt;/td>
&lt;td>18.7&lt;/td>
&lt;td>394.92&lt;/td>
&lt;td>6.78&lt;/td>
&lt;td>24.1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_252&lt;/th>
&lt;td>0.08221&lt;/td>
&lt;td>22.0&lt;/td>
&lt;td>5.86&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.431&lt;/td>
&lt;td>6.957&lt;/td>
&lt;td>6.8&lt;/td>
&lt;td>8.9067&lt;/td>
&lt;td>7.0&lt;/td>
&lt;td>330.0&lt;/td>
&lt;td>19.1&lt;/td>
&lt;td>386.09&lt;/td>
&lt;td>3.53&lt;/td>
&lt;td>29.6&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;p>We can easily combine multiple conditions,&lt;/p>
&lt;pre>&lt;code class="language-python">df.query(&amp;quot;AGE &amp;lt; 7 and INDUS == 10.81&amp;quot;)
&lt;/code>&lt;/pre>
&lt;div>
&lt;style scoped>
.dataframe tbody tr th:only-of-type {
vertical-align: middle;
}
&lt;pre>&lt;code>.dataframe tbody tr th {
vertical-align: top;
}
.dataframe thead th {
text-align: right;
}
&lt;/code>&lt;/pre>
&lt;p>&lt;/style>&lt;/p>
&lt;table border="1" class="dataframe">
&lt;thead>
&lt;tr style="text-align: right;">
&lt;th>&lt;/th>
&lt;th>CRIM&lt;/th>
&lt;th>ZN&lt;/th>
&lt;th>INDUS&lt;/th>
&lt;th>CHAS&lt;/th>
&lt;th>NOX&lt;/th>
&lt;th>RM&lt;/th>
&lt;th>AGE&lt;/th>
&lt;th>DIS&lt;/th>
&lt;th>RAD&lt;/th>
&lt;th>TAX&lt;/th>
&lt;th>PTRATIO&lt;/th>
&lt;th>B&lt;/th>
&lt;th>LSTAT&lt;/th>
&lt;th>MEDV&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;th>i_70&lt;/th>
&lt;td>0.08826&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>10.81&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.413&lt;/td>
&lt;td>6.417&lt;/td>
&lt;td>6.6&lt;/td>
&lt;td>5.2873&lt;/td>
&lt;td>4.0&lt;/td>
&lt;td>305.0&lt;/td>
&lt;td>19.2&lt;/td>
&lt;td>383.73&lt;/td>
&lt;td>6.72&lt;/td>
&lt;td>24.2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_73&lt;/th>
&lt;td>0.19539&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>10.81&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.413&lt;/td>
&lt;td>6.245&lt;/td>
&lt;td>6.2&lt;/td>
&lt;td>5.2873&lt;/td>
&lt;td>4.0&lt;/td>
&lt;td>305.0&lt;/td>
&lt;td>19.2&lt;/td>
&lt;td>377.17&lt;/td>
&lt;td>7.54&lt;/td>
&lt;td>23.4&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;p>do calculations,&lt;/p>
&lt;pre>&lt;code class="language-python">df.query(&amp;quot;LSTAT*15 &amp;lt; MEDV&amp;quot;)
&lt;/code>&lt;/pre>
&lt;div>
&lt;style scoped>
.dataframe tbody tr th:only-of-type {
vertical-align: middle;
}
&lt;pre>&lt;code>.dataframe tbody tr th {
vertical-align: top;
}
.dataframe thead th {
text-align: right;
}
&lt;/code>&lt;/pre>
&lt;p>&lt;/style>&lt;/p>
&lt;table border="1" class="dataframe">
&lt;thead>
&lt;tr style="text-align: right;">
&lt;th>&lt;/th>
&lt;th>CRIM&lt;/th>
&lt;th>ZN&lt;/th>
&lt;th>INDUS&lt;/th>
&lt;th>CHAS&lt;/th>
&lt;th>NOX&lt;/th>
&lt;th>RM&lt;/th>
&lt;th>AGE&lt;/th>
&lt;th>DIS&lt;/th>
&lt;th>RAD&lt;/th>
&lt;th>TAX&lt;/th>
&lt;th>PTRATIO&lt;/th>
&lt;th>B&lt;/th>
&lt;th>LSTAT&lt;/th>
&lt;th>MEDV&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;th>i_40&lt;/th>
&lt;td>0.03359&lt;/td>
&lt;td>75.0&lt;/td>
&lt;td>2.95&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.4280&lt;/td>
&lt;td>7.024&lt;/td>
&lt;td>15.8&lt;/td>
&lt;td>5.4011&lt;/td>
&lt;td>3.0&lt;/td>
&lt;td>252.0&lt;/td>
&lt;td>18.3&lt;/td>
&lt;td>395.62&lt;/td>
&lt;td>1.98&lt;/td>
&lt;td>34.9&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_161&lt;/th>
&lt;td>1.46336&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>19.58&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.6050&lt;/td>
&lt;td>7.489&lt;/td>
&lt;td>90.8&lt;/td>
&lt;td>1.9709&lt;/td>
&lt;td>5.0&lt;/td>
&lt;td>403.0&lt;/td>
&lt;td>14.7&lt;/td>
&lt;td>374.43&lt;/td>
&lt;td>1.73&lt;/td>
&lt;td>50.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_162&lt;/th>
&lt;td>1.83377&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>19.58&lt;/td>
&lt;td>1.0&lt;/td>
&lt;td>0.6050&lt;/td>
&lt;td>7.802&lt;/td>
&lt;td>98.2&lt;/td>
&lt;td>2.0407&lt;/td>
&lt;td>5.0&lt;/td>
&lt;td>403.0&lt;/td>
&lt;td>14.7&lt;/td>
&lt;td>389.61&lt;/td>
&lt;td>1.92&lt;/td>
&lt;td>50.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_163&lt;/th>
&lt;td>1.51902&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>19.58&lt;/td>
&lt;td>1.0&lt;/td>
&lt;td>0.6050&lt;/td>
&lt;td>8.375&lt;/td>
&lt;td>93.9&lt;/td>
&lt;td>2.1620&lt;/td>
&lt;td>5.0&lt;/td>
&lt;td>403.0&lt;/td>
&lt;td>14.7&lt;/td>
&lt;td>388.45&lt;/td>
&lt;td>3.32&lt;/td>
&lt;td>50.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_195&lt;/th>
&lt;td>0.01381&lt;/td>
&lt;td>80.0&lt;/td>
&lt;td>0.46&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.4220&lt;/td>
&lt;td>7.875&lt;/td>
&lt;td>32.0&lt;/td>
&lt;td>5.6484&lt;/td>
&lt;td>4.0&lt;/td>
&lt;td>255.0&lt;/td>
&lt;td>14.4&lt;/td>
&lt;td>394.23&lt;/td>
&lt;td>2.97&lt;/td>
&lt;td>50.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_204&lt;/th>
&lt;td>0.02009&lt;/td>
&lt;td>95.0&lt;/td>
&lt;td>2.68&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.4161&lt;/td>
&lt;td>8.034&lt;/td>
&lt;td>31.9&lt;/td>
&lt;td>5.1180&lt;/td>
&lt;td>4.0&lt;/td>
&lt;td>224.0&lt;/td>
&lt;td>14.7&lt;/td>
&lt;td>390.55&lt;/td>
&lt;td>2.88&lt;/td>
&lt;td>50.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_232&lt;/th>
&lt;td>0.57529&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>6.20&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.5070&lt;/td>
&lt;td>8.337&lt;/td>
&lt;td>73.3&lt;/td>
&lt;td>3.8384&lt;/td>
&lt;td>8.0&lt;/td>
&lt;td>307.0&lt;/td>
&lt;td>17.4&lt;/td>
&lt;td>385.91&lt;/td>
&lt;td>2.47&lt;/td>
&lt;td>41.7&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_282&lt;/th>
&lt;td>0.06129&lt;/td>
&lt;td>20.0&lt;/td>
&lt;td>3.33&lt;/td>
&lt;td>1.0&lt;/td>
&lt;td>0.4429&lt;/td>
&lt;td>7.645&lt;/td>
&lt;td>49.7&lt;/td>
&lt;td>5.2119&lt;/td>
&lt;td>5.0&lt;/td>
&lt;td>216.0&lt;/td>
&lt;td>14.9&lt;/td>
&lt;td>377.07&lt;/td>
&lt;td>3.01&lt;/td>
&lt;td>46.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_283&lt;/th>
&lt;td>0.01501&lt;/td>
&lt;td>90.0&lt;/td>
&lt;td>1.21&lt;/td>
&lt;td>1.0&lt;/td>
&lt;td>0.4010&lt;/td>
&lt;td>7.923&lt;/td>
&lt;td>24.8&lt;/td>
&lt;td>5.8850&lt;/td>
&lt;td>1.0&lt;/td>
&lt;td>198.0&lt;/td>
&lt;td>13.6&lt;/td>
&lt;td>395.52&lt;/td>
&lt;td>3.16&lt;/td>
&lt;td>50.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_368&lt;/th>
&lt;td>4.89822&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>18.10&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.6310&lt;/td>
&lt;td>4.970&lt;/td>
&lt;td>100.0&lt;/td>
&lt;td>1.3325&lt;/td>
&lt;td>24.0&lt;/td>
&lt;td>666.0&lt;/td>
&lt;td>20.2&lt;/td>
&lt;td>375.52&lt;/td>
&lt;td>3.26&lt;/td>
&lt;td>50.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_370&lt;/th>
&lt;td>6.53876&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>18.10&lt;/td>
&lt;td>1.0&lt;/td>
&lt;td>0.6310&lt;/td>
&lt;td>7.016&lt;/td>
&lt;td>97.5&lt;/td>
&lt;td>1.2024&lt;/td>
&lt;td>24.0&lt;/td>
&lt;td>666.0&lt;/td>
&lt;td>20.2&lt;/td>
&lt;td>392.05&lt;/td>
&lt;td>2.96&lt;/td>
&lt;td>50.0&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;p>and even crazy things like this:&lt;/p>
&lt;pre>&lt;code class="language-python">df.query(&amp;quot;INDUS &amp;lt; RM/1.5 &amp;lt; DIS &amp;gt; RAD*8&amp;quot;)
&lt;/code>&lt;/pre>
&lt;div>
&lt;style scoped>
.dataframe tbody tr th:only-of-type {
vertical-align: middle;
}
&lt;pre>&lt;code>.dataframe tbody tr th {
vertical-align: top;
}
.dataframe thead th {
text-align: right;
}
&lt;/code>&lt;/pre>
&lt;p>&lt;/style>&lt;/p>
&lt;table border="1" class="dataframe">
&lt;thead>
&lt;tr style="text-align: right;">
&lt;th>&lt;/th>
&lt;th>CRIM&lt;/th>
&lt;th>ZN&lt;/th>
&lt;th>INDUS&lt;/th>
&lt;th>CHAS&lt;/th>
&lt;th>NOX&lt;/th>
&lt;th>RM&lt;/th>
&lt;th>AGE&lt;/th>
&lt;th>DIS&lt;/th>
&lt;th>RAD&lt;/th>
&lt;th>TAX&lt;/th>
&lt;th>PTRATIO&lt;/th>
&lt;th>B&lt;/th>
&lt;th>LSTAT&lt;/th>
&lt;th>MEDV&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;th>i_254&lt;/th>
&lt;td>0.04819&lt;/td>
&lt;td>80.0&lt;/td>
&lt;td>3.64&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.392&lt;/td>
&lt;td>6.108&lt;/td>
&lt;td>32.0&lt;/td>
&lt;td>9.2203&lt;/td>
&lt;td>1.0&lt;/td>
&lt;td>315.0&lt;/td>
&lt;td>16.4&lt;/td>
&lt;td>392.89&lt;/td>
&lt;td>6.57&lt;/td>
&lt;td>21.9&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_255&lt;/th>
&lt;td>0.03548&lt;/td>
&lt;td>80.0&lt;/td>
&lt;td>3.64&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.392&lt;/td>
&lt;td>5.876&lt;/td>
&lt;td>19.1&lt;/td>
&lt;td>9.2203&lt;/td>
&lt;td>1.0&lt;/td>
&lt;td>315.0&lt;/td>
&lt;td>16.4&lt;/td>
&lt;td>395.18&lt;/td>
&lt;td>9.25&lt;/td>
&lt;td>20.9&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_286&lt;/th>
&lt;td>0.01965&lt;/td>
&lt;td>80.0&lt;/td>
&lt;td>1.76&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.385&lt;/td>
&lt;td>6.230&lt;/td>
&lt;td>31.5&lt;/td>
&lt;td>9.0892&lt;/td>
&lt;td>1.0&lt;/td>
&lt;td>241.0&lt;/td>
&lt;td>18.2&lt;/td>
&lt;td>341.60&lt;/td>
&lt;td>12.93&lt;/td>
&lt;td>20.1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_349&lt;/th>
&lt;td>0.02899&lt;/td>
&lt;td>40.0&lt;/td>
&lt;td>1.25&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.429&lt;/td>
&lt;td>6.939&lt;/td>
&lt;td>34.5&lt;/td>
&lt;td>8.7921&lt;/td>
&lt;td>1.0&lt;/td>
&lt;td>335.0&lt;/td>
&lt;td>19.7&lt;/td>
&lt;td>389.85&lt;/td>
&lt;td>5.89&lt;/td>
&lt;td>26.6&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_350&lt;/th>
&lt;td>0.06211&lt;/td>
&lt;td>40.0&lt;/td>
&lt;td>1.25&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.429&lt;/td>
&lt;td>6.490&lt;/td>
&lt;td>44.4&lt;/td>
&lt;td>8.7921&lt;/td>
&lt;td>1.0&lt;/td>
&lt;td>335.0&lt;/td>
&lt;td>19.7&lt;/td>
&lt;td>396.90&lt;/td>
&lt;td>5.98&lt;/td>
&lt;td>22.9&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;p>To select all rows where a column is equal to several values we can put a list into the expression:&lt;/p>
&lt;pre>&lt;code class="language-python">df.query(&amp;quot;RAD == [1., 2., 3.]&amp;quot;)
&lt;/code>&lt;/pre>
&lt;div>
&lt;style scoped>
.dataframe tbody tr th:only-of-type {
vertical-align: middle;
}
&lt;pre>&lt;code>.dataframe tbody tr th {
vertical-align: top;
}
.dataframe thead th {
text-align: right;
}
&lt;/code>&lt;/pre>
&lt;p>&lt;/style>&lt;/p>
&lt;table border="1" class="dataframe">
&lt;thead>
&lt;tr style="text-align: right;">
&lt;th>&lt;/th>
&lt;th>CRIM&lt;/th>
&lt;th>ZN&lt;/th>
&lt;th>INDUS&lt;/th>
&lt;th>CHAS&lt;/th>
&lt;th>NOX&lt;/th>
&lt;th>RM&lt;/th>
&lt;th>AGE&lt;/th>
&lt;th>DIS&lt;/th>
&lt;th>RAD&lt;/th>
&lt;th>TAX&lt;/th>
&lt;th>PTRATIO&lt;/th>
&lt;th>B&lt;/th>
&lt;th>LSTAT&lt;/th>
&lt;th>MEDV&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;th>i_0&lt;/th>
&lt;td>0.00632&lt;/td>
&lt;td>18.0&lt;/td>
&lt;td>2.31&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.538&lt;/td>
&lt;td>6.575&lt;/td>
&lt;td>65.2&lt;/td>
&lt;td>4.0900&lt;/td>
&lt;td>1.0&lt;/td>
&lt;td>296.0&lt;/td>
&lt;td>15.3&lt;/td>
&lt;td>396.90&lt;/td>
&lt;td>4.98&lt;/td>
&lt;td>24.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_1&lt;/th>
&lt;td>0.02731&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>7.07&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.469&lt;/td>
&lt;td>6.421&lt;/td>
&lt;td>78.9&lt;/td>
&lt;td>4.9671&lt;/td>
&lt;td>2.0&lt;/td>
&lt;td>242.0&lt;/td>
&lt;td>17.8&lt;/td>
&lt;td>396.90&lt;/td>
&lt;td>9.14&lt;/td>
&lt;td>21.6&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_2&lt;/th>
&lt;td>0.02729&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>7.07&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.469&lt;/td>
&lt;td>7.185&lt;/td>
&lt;td>61.1&lt;/td>
&lt;td>4.9671&lt;/td>
&lt;td>2.0&lt;/td>
&lt;td>242.0&lt;/td>
&lt;td>17.8&lt;/td>
&lt;td>392.83&lt;/td>
&lt;td>4.03&lt;/td>
&lt;td>34.7&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_3&lt;/th>
&lt;td>0.03237&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>2.18&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.458&lt;/td>
&lt;td>6.998&lt;/td>
&lt;td>45.8&lt;/td>
&lt;td>6.0622&lt;/td>
&lt;td>3.0&lt;/td>
&lt;td>222.0&lt;/td>
&lt;td>18.7&lt;/td>
&lt;td>394.63&lt;/td>
&lt;td>2.94&lt;/td>
&lt;td>33.4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_4&lt;/th>
&lt;td>0.06905&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>2.18&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.458&lt;/td>
&lt;td>7.147&lt;/td>
&lt;td>54.2&lt;/td>
&lt;td>6.0622&lt;/td>
&lt;td>3.0&lt;/td>
&lt;td>222.0&lt;/td>
&lt;td>18.7&lt;/td>
&lt;td>396.90&lt;/td>
&lt;td>5.33&lt;/td>
&lt;td>36.2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>...&lt;/th>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_501&lt;/th>
&lt;td>0.06263&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>11.93&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.573&lt;/td>
&lt;td>6.593&lt;/td>
&lt;td>69.1&lt;/td>
&lt;td>2.4786&lt;/td>
&lt;td>1.0&lt;/td>
&lt;td>273.0&lt;/td>
&lt;td>21.0&lt;/td>
&lt;td>391.99&lt;/td>
&lt;td>9.67&lt;/td>
&lt;td>22.4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_502&lt;/th>
&lt;td>0.04527&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>11.93&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.573&lt;/td>
&lt;td>6.120&lt;/td>
&lt;td>76.7&lt;/td>
&lt;td>2.2875&lt;/td>
&lt;td>1.0&lt;/td>
&lt;td>273.0&lt;/td>
&lt;td>21.0&lt;/td>
&lt;td>396.90&lt;/td>
&lt;td>9.08&lt;/td>
&lt;td>20.6&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_503&lt;/th>
&lt;td>0.06076&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>11.93&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.573&lt;/td>
&lt;td>6.976&lt;/td>
&lt;td>91.0&lt;/td>
&lt;td>2.1675&lt;/td>
&lt;td>1.0&lt;/td>
&lt;td>273.0&lt;/td>
&lt;td>21.0&lt;/td>
&lt;td>396.90&lt;/td>
&lt;td>5.64&lt;/td>
&lt;td>23.9&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_504&lt;/th>
&lt;td>0.10959&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>11.93&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.573&lt;/td>
&lt;td>6.794&lt;/td>
&lt;td>89.3&lt;/td>
&lt;td>2.3889&lt;/td>
&lt;td>1.0&lt;/td>
&lt;td>273.0&lt;/td>
&lt;td>21.0&lt;/td>
&lt;td>393.45&lt;/td>
&lt;td>6.48&lt;/td>
&lt;td>22.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_505&lt;/th>
&lt;td>0.04741&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>11.93&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.573&lt;/td>
&lt;td>6.030&lt;/td>
&lt;td>80.8&lt;/td>
&lt;td>2.5050&lt;/td>
&lt;td>1.0&lt;/td>
&lt;td>273.0&lt;/td>
&lt;td>21.0&lt;/td>
&lt;td>396.90&lt;/td>
&lt;td>7.88&lt;/td>
&lt;td>11.9&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>82 rows × 14 columns&lt;/p>
&lt;/div>
&lt;p>This gives us all rows where &lt;code>RAD&lt;/code> is either 1, 2, or 3.&lt;/p>
&lt;p>We can also refer to a list from the environment using the symbol &lt;code>@&lt;/code>:&lt;/p>
&lt;pre>&lt;code class="language-python">several_values = [1, 2, 3]
df.query(&amp;quot;RAD == @several_values&amp;quot;)
&lt;/code>&lt;/pre>
&lt;div>
&lt;style scoped>
.dataframe tbody tr th:only-of-type {
vertical-align: middle;
}
&lt;pre>&lt;code>.dataframe tbody tr th {
vertical-align: top;
}
.dataframe thead th {
text-align: right;
}
&lt;/code>&lt;/pre>
&lt;p>&lt;/style>&lt;/p>
&lt;table border="1" class="dataframe">
&lt;thead>
&lt;tr style="text-align: right;">
&lt;th>&lt;/th>
&lt;th>CRIM&lt;/th>
&lt;th>ZN&lt;/th>
&lt;th>INDUS&lt;/th>
&lt;th>CHAS&lt;/th>
&lt;th>NOX&lt;/th>
&lt;th>RM&lt;/th>
&lt;th>AGE&lt;/th>
&lt;th>DIS&lt;/th>
&lt;th>RAD&lt;/th>
&lt;th>TAX&lt;/th>
&lt;th>PTRATIO&lt;/th>
&lt;th>B&lt;/th>
&lt;th>LSTAT&lt;/th>
&lt;th>MEDV&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;th>i_0&lt;/th>
&lt;td>0.00632&lt;/td>
&lt;td>18.0&lt;/td>
&lt;td>2.31&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.538&lt;/td>
&lt;td>6.575&lt;/td>
&lt;td>65.2&lt;/td>
&lt;td>4.0900&lt;/td>
&lt;td>1.0&lt;/td>
&lt;td>296.0&lt;/td>
&lt;td>15.3&lt;/td>
&lt;td>396.90&lt;/td>
&lt;td>4.98&lt;/td>
&lt;td>24.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_1&lt;/th>
&lt;td>0.02731&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>7.07&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.469&lt;/td>
&lt;td>6.421&lt;/td>
&lt;td>78.9&lt;/td>
&lt;td>4.9671&lt;/td>
&lt;td>2.0&lt;/td>
&lt;td>242.0&lt;/td>
&lt;td>17.8&lt;/td>
&lt;td>396.90&lt;/td>
&lt;td>9.14&lt;/td>
&lt;td>21.6&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_2&lt;/th>
&lt;td>0.02729&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>7.07&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.469&lt;/td>
&lt;td>7.185&lt;/td>
&lt;td>61.1&lt;/td>
&lt;td>4.9671&lt;/td>
&lt;td>2.0&lt;/td>
&lt;td>242.0&lt;/td>
&lt;td>17.8&lt;/td>
&lt;td>392.83&lt;/td>
&lt;td>4.03&lt;/td>
&lt;td>34.7&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_3&lt;/th>
&lt;td>0.03237&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>2.18&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.458&lt;/td>
&lt;td>6.998&lt;/td>
&lt;td>45.8&lt;/td>
&lt;td>6.0622&lt;/td>
&lt;td>3.0&lt;/td>
&lt;td>222.0&lt;/td>
&lt;td>18.7&lt;/td>
&lt;td>394.63&lt;/td>
&lt;td>2.94&lt;/td>
&lt;td>33.4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_4&lt;/th>
&lt;td>0.06905&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>2.18&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.458&lt;/td>
&lt;td>7.147&lt;/td>
&lt;td>54.2&lt;/td>
&lt;td>6.0622&lt;/td>
&lt;td>3.0&lt;/td>
&lt;td>222.0&lt;/td>
&lt;td>18.7&lt;/td>
&lt;td>396.90&lt;/td>
&lt;td>5.33&lt;/td>
&lt;td>36.2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>...&lt;/th>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_501&lt;/th>
&lt;td>0.06263&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>11.93&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.573&lt;/td>
&lt;td>6.593&lt;/td>
&lt;td>69.1&lt;/td>
&lt;td>2.4786&lt;/td>
&lt;td>1.0&lt;/td>
&lt;td>273.0&lt;/td>
&lt;td>21.0&lt;/td>
&lt;td>391.99&lt;/td>
&lt;td>9.67&lt;/td>
&lt;td>22.4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_502&lt;/th>
&lt;td>0.04527&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>11.93&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.573&lt;/td>
&lt;td>6.120&lt;/td>
&lt;td>76.7&lt;/td>
&lt;td>2.2875&lt;/td>
&lt;td>1.0&lt;/td>
&lt;td>273.0&lt;/td>
&lt;td>21.0&lt;/td>
&lt;td>396.90&lt;/td>
&lt;td>9.08&lt;/td>
&lt;td>20.6&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_503&lt;/th>
&lt;td>0.06076&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>11.93&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.573&lt;/td>
&lt;td>6.976&lt;/td>
&lt;td>91.0&lt;/td>
&lt;td>2.1675&lt;/td>
&lt;td>1.0&lt;/td>
&lt;td>273.0&lt;/td>
&lt;td>21.0&lt;/td>
&lt;td>396.90&lt;/td>
&lt;td>5.64&lt;/td>
&lt;td>23.9&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_504&lt;/th>
&lt;td>0.10959&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>11.93&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.573&lt;/td>
&lt;td>6.794&lt;/td>
&lt;td>89.3&lt;/td>
&lt;td>2.3889&lt;/td>
&lt;td>1.0&lt;/td>
&lt;td>273.0&lt;/td>
&lt;td>21.0&lt;/td>
&lt;td>393.45&lt;/td>
&lt;td>6.48&lt;/td>
&lt;td>22.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_505&lt;/th>
&lt;td>0.04741&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>11.93&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.573&lt;/td>
&lt;td>6.030&lt;/td>
&lt;td>80.8&lt;/td>
&lt;td>2.5050&lt;/td>
&lt;td>1.0&lt;/td>
&lt;td>273.0&lt;/td>
&lt;td>21.0&lt;/td>
&lt;td>396.90&lt;/td>
&lt;td>7.88&lt;/td>
&lt;td>11.9&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>82 rows × 14 columns&lt;/p>
&lt;/div>
&lt;p>Lit! 🔥&lt;/p>
&lt;h2 id="miscellaneous">Miscellaneous&lt;/h2>
&lt;h3 id="filter-method">&lt;code>filter&lt;/code> method&lt;/h3>
&lt;p>The filter method allows for a nifty selection of columns or rows (if we set &lt;code>axis=0&lt;/code>) based on a regular expression.
E.g. to select columns beginning with the letter &lt;em>C&lt;/em> we type&lt;/p>
&lt;pre>&lt;code class="language-python">df.filter(regex='^C')
&lt;/code>&lt;/pre>
&lt;div>
&lt;style scoped>
.dataframe tbody tr th:only-of-type {
vertical-align: middle;
}
&lt;pre>&lt;code>.dataframe tbody tr th {
vertical-align: top;
}
.dataframe thead th {
text-align: right;
}
&lt;/code>&lt;/pre>
&lt;p>&lt;/style>&lt;/p>
&lt;table border="1" class="dataframe">
&lt;thead>
&lt;tr style="text-align: right;">
&lt;th>&lt;/th>
&lt;th>CRIM&lt;/th>
&lt;th>CHAS&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;th>i_0&lt;/th>
&lt;td>0.00632&lt;/td>
&lt;td>0.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_1&lt;/th>
&lt;td>0.02731&lt;/td>
&lt;td>0.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_2&lt;/th>
&lt;td>0.02729&lt;/td>
&lt;td>0.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_3&lt;/th>
&lt;td>0.03237&lt;/td>
&lt;td>0.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_4&lt;/th>
&lt;td>0.06905&lt;/td>
&lt;td>0.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>...&lt;/th>
&lt;td>...&lt;/td>
&lt;td>...&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_501&lt;/th>
&lt;td>0.06263&lt;/td>
&lt;td>0.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_502&lt;/th>
&lt;td>0.04527&lt;/td>
&lt;td>0.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_503&lt;/th>
&lt;td>0.06076&lt;/td>
&lt;td>0.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_504&lt;/th>
&lt;td>0.10959&lt;/td>
&lt;td>0.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_505&lt;/th>
&lt;td>0.04741&lt;/td>
&lt;td>0.0&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>506 rows × 2 columns&lt;/p>
&lt;/div>
&lt;pre>&lt;code class="language-python">df.filter(regex='^i_50', axis=0)
&lt;/code>&lt;/pre>
&lt;div>
&lt;style scoped>
.dataframe tbody tr th:only-of-type {
vertical-align: middle;
}
&lt;pre>&lt;code>.dataframe tbody tr th {
vertical-align: top;
}
.dataframe thead th {
text-align: right;
}
&lt;/code>&lt;/pre>
&lt;p>&lt;/style>&lt;/p>
&lt;table border="1" class="dataframe">
&lt;thead>
&lt;tr style="text-align: right;">
&lt;th>&lt;/th>
&lt;th>CRIM&lt;/th>
&lt;th>ZN&lt;/th>
&lt;th>INDUS&lt;/th>
&lt;th>CHAS&lt;/th>
&lt;th>NOX&lt;/th>
&lt;th>RM&lt;/th>
&lt;th>AGE&lt;/th>
&lt;th>DIS&lt;/th>
&lt;th>RAD&lt;/th>
&lt;th>TAX&lt;/th>
&lt;th>PTRATIO&lt;/th>
&lt;th>B&lt;/th>
&lt;th>LSTAT&lt;/th>
&lt;th>MEDV&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;th>i_50&lt;/th>
&lt;td>0.08873&lt;/td>
&lt;td>21.0&lt;/td>
&lt;td>5.64&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.439&lt;/td>
&lt;td>5.963&lt;/td>
&lt;td>45.7&lt;/td>
&lt;td>6.8147&lt;/td>
&lt;td>4.0&lt;/td>
&lt;td>243.0&lt;/td>
&lt;td>16.8&lt;/td>
&lt;td>395.56&lt;/td>
&lt;td>13.45&lt;/td>
&lt;td>19.7&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_500&lt;/th>
&lt;td>0.22438&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>9.69&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.585&lt;/td>
&lt;td>6.027&lt;/td>
&lt;td>79.7&lt;/td>
&lt;td>2.4982&lt;/td>
&lt;td>6.0&lt;/td>
&lt;td>391.0&lt;/td>
&lt;td>19.2&lt;/td>
&lt;td>396.90&lt;/td>
&lt;td>14.33&lt;/td>
&lt;td>16.8&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_501&lt;/th>
&lt;td>0.06263&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>11.93&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.573&lt;/td>
&lt;td>6.593&lt;/td>
&lt;td>69.1&lt;/td>
&lt;td>2.4786&lt;/td>
&lt;td>1.0&lt;/td>
&lt;td>273.0&lt;/td>
&lt;td>21.0&lt;/td>
&lt;td>391.99&lt;/td>
&lt;td>9.67&lt;/td>
&lt;td>22.4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_502&lt;/th>
&lt;td>0.04527&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>11.93&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.573&lt;/td>
&lt;td>6.120&lt;/td>
&lt;td>76.7&lt;/td>
&lt;td>2.2875&lt;/td>
&lt;td>1.0&lt;/td>
&lt;td>273.0&lt;/td>
&lt;td>21.0&lt;/td>
&lt;td>396.90&lt;/td>
&lt;td>9.08&lt;/td>
&lt;td>20.6&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_503&lt;/th>
&lt;td>0.06076&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>11.93&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.573&lt;/td>
&lt;td>6.976&lt;/td>
&lt;td>91.0&lt;/td>
&lt;td>2.1675&lt;/td>
&lt;td>1.0&lt;/td>
&lt;td>273.0&lt;/td>
&lt;td>21.0&lt;/td>
&lt;td>396.90&lt;/td>
&lt;td>5.64&lt;/td>
&lt;td>23.9&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_504&lt;/th>
&lt;td>0.10959&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>11.93&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.573&lt;/td>
&lt;td>6.794&lt;/td>
&lt;td>89.3&lt;/td>
&lt;td>2.3889&lt;/td>
&lt;td>1.0&lt;/td>
&lt;td>273.0&lt;/td>
&lt;td>21.0&lt;/td>
&lt;td>393.45&lt;/td>
&lt;td>6.48&lt;/td>
&lt;td>22.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>i_505&lt;/th>
&lt;td>0.04741&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>11.93&lt;/td>
&lt;td>0.0&lt;/td>
&lt;td>0.573&lt;/td>
&lt;td>6.030&lt;/td>
&lt;td>80.8&lt;/td>
&lt;td>2.5050&lt;/td>
&lt;td>1.0&lt;/td>
&lt;td>273.0&lt;/td>
&lt;td>21.0&lt;/td>
&lt;td>396.90&lt;/td>
&lt;td>7.88&lt;/td>
&lt;td>11.9&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;h3 id="select-a-column-using-">Select a column using &lt;code>.&lt;/code>&lt;/h3>
&lt;p>Instead of &lt;code>df['column_name']&lt;/code> we can also select a column typing &lt;code>df.column_name&lt;/code>.
However, this only works for columns whose names do not coincide with another &lt;code>DataFrame&lt;/code> method. Thus, I would discourage selecting columns this way.&lt;/p>
&lt;pre>&lt;code class="language-python">df.CRIM[0:5]
&lt;/code>&lt;/pre>
&lt;pre>&lt;code>i_0 0.00632
i_1 0.02731
i_2 0.02729
i_3 0.03237
i_4 0.06905
Name: CRIM, dtype: float64
&lt;/code>&lt;/pre>
&lt;h3 id="at--iat-methods">at / iat methods&lt;/h3>
&lt;p>For the special case, we want to access a single value there are the methods &lt;code>at&lt;/code> and &lt;code>iat&lt;/code>, which are supposed to be faster than &lt;code>loc&lt;/code> and &lt;code>iloc&lt;/code>.&lt;/p>
&lt;pre>&lt;code class="language-python">df.iat[2, 2]
&lt;/code>&lt;/pre>
&lt;pre>&lt;code>7.07
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-python">df.at['i_2', 'INDUS']
&lt;/code>&lt;/pre>
&lt;pre>&lt;code>7.07
&lt;/code>&lt;/pre>
&lt;h3 id="ix-method">ix method&lt;/h3>
&lt;p>If you are googling for a Pandas-related question you may find solutions using the method
&lt;code>my_df.ix(...)&lt;/code> which is deprecated since Pandas 0.20 and not working anymore in 2020.&lt;/p>
&lt;h2 id="resources">Resources&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://pandas.pydata.org/Pandas_Cheat_Sheet.pdf" target="_blank" rel="noopener">Pandas cheat sheet&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html" target="_blank" rel="noopener">Pandas user guide for indexing and selecting data&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://jakevdp.github.io/PythonDataScienceHandbook/03.02-data-indexing-and-selection.html" target="_blank" rel="noopener">Python Data Science Handbook chapter 3&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://scikit-learn.org/stable/datasets/index.html" target="_blank" rel="noopener">scikit-learn toy datasets&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/mwaskom/seaborn-data" target="_blank" rel="noopener">seaborn datasets&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Uninstalling Anaconda</title><link>https://bodoburger.github.io/notes/anaconda/anaconda-uninstall/</link><pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate><guid>https://bodoburger.github.io/notes/anaconda/anaconda-uninstall/</guid><description>&lt;ul>
&lt;li>&lt;a href="https://docs.anaconda.com/anaconda/install/uninstall/" target="_blank" rel="noopener">Documentation&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>For a clean uninstall, first install &lt;em>anaconda-clean&lt;/em> package,&lt;/p>
&lt;pre>&lt;code class="language-bash">conda install anaconda-clean
anaconda-clean
&lt;/code>&lt;/pre>
&lt;p>then:&lt;/p>
&lt;pre>&lt;code class="language-bash">rm -rf ~/anaconda3
&lt;/code>&lt;/pre></description></item><item><title>Feature Effects in Machine Learning Models</title><link>https://bodoburger.github.io/project/2019-feature-effects/</link><pubDate>Sat, 06 Apr 2019 00:00:00 +0000</pubDate><guid>https://bodoburger.github.io/project/2019-feature-effects/</guid><description>
&lt;div id="TOC">
&lt;ul>
&lt;li>&lt;a href="#abstract">Abstract&lt;/a>&lt;/li>
&lt;li>&lt;a href="#example-bike-sharing-data">Example: Bike Sharing Data&lt;/a>&lt;ul>
&lt;li>&lt;a href="#model-training">Model Training&lt;/a>&lt;/li>
&lt;li>&lt;a href="#analysis">Analysis&lt;/a>&lt;/li>
&lt;/ul>&lt;/li>
&lt;li>&lt;a href="#r-package">R package&lt;/a>&lt;/li>
&lt;li>&lt;a href="#references">References&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div id="abstract" class="section level2">
&lt;h2>Abstract&lt;/h2>
&lt;p>Supervised machine learning models are mostly black boxes.
The method we propose tries to improve understanding of these black boxes.
The goal is to find a way to quantify effect sizes of features.
Average marginal effects are used in social sciences
to determine effect sizes of logistic regression models.
Applying this method to a machine learning model usually does not
adequately represent the non-convex, non-monotonic response function.
There are graphical methods like partial dependence plots or accumulated local effect plots
that visualize the response functions but do not offer a quantitative interpretation.
First, we use one of the latter methods to identify intervals
within the response function is relatively stable.
Second, we report some estimate of the feature effect separately for each interval.
Our method determines the number of necessary intervals automatically.&lt;/p>
&lt;/div>
&lt;div id="example-bike-sharing-data" class="section level2">
&lt;h2>Example: Bike Sharing Data&lt;/h2>
&lt;p>The following examples shows
how the method can help to understand heterogeneous feature effects.
We apply the method to the Bike Sharing dataset &lt;span class="citation">(Fanaee-T and Gama 2013)&lt;/span>
which was further processed by &lt;span class="citation">Molnar (2018)&lt;/span>.
See table &lt;a href="#tab:bikes-load-data">1&lt;/a> for an overview of all the features.
The target &lt;code>cnt&lt;/code> is the number of bicycles
lent by a bicycle sharing company per day.
The features comprise calendrical and meteorological information for each day.&lt;/p>
&lt;table>
&lt;caption>&lt;span id="tab:bikes-load-data">Table 1: &lt;/span>Excerpt of the Bike Sharing dataset&lt;/caption>
&lt;thead>
&lt;tr class="header">
&lt;th align="left">season&lt;/th>
&lt;th align="left">yr&lt;/th>
&lt;th align="left">mnth&lt;/th>
&lt;th align="left">holiday&lt;/th>
&lt;th align="left">weekday&lt;/th>
&lt;th align="left">weathersit&lt;/th>
&lt;th align="right">temp&lt;/th>
&lt;th align="right">hum&lt;/th>
&lt;th align="right">windspeed&lt;/th>
&lt;th align="right">cnt&lt;/th>
&lt;th align="right">days_since_2011&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr class="odd">
&lt;td align="left">SPRING&lt;/td>
&lt;td align="left">2011&lt;/td>
&lt;td align="left">JAN&lt;/td>
&lt;td align="left">0&lt;/td>
&lt;td align="left">SAT&lt;/td>
&lt;td align="left">MISTY&lt;/td>
&lt;td align="right">8.18&lt;/td>
&lt;td align="right">80.6&lt;/td>
&lt;td align="right">10.8&lt;/td>
&lt;td align="right">985&lt;/td>
&lt;td align="right">0&lt;/td>
&lt;/tr>
&lt;tr class="even">
&lt;td align="left">SPRING&lt;/td>
&lt;td align="left">2011&lt;/td>
&lt;td align="left">JAN&lt;/td>
&lt;td align="left">0&lt;/td>
&lt;td align="left">SUN&lt;/td>
&lt;td align="left">MISTY&lt;/td>
&lt;td align="right">9.08&lt;/td>
&lt;td align="right">69.6&lt;/td>
&lt;td align="right">16.7&lt;/td>
&lt;td align="right">801&lt;/td>
&lt;td align="right">1&lt;/td>
&lt;/tr>
&lt;tr class="odd">
&lt;td align="left">SPRING&lt;/td>
&lt;td align="left">2011&lt;/td>
&lt;td align="left">JAN&lt;/td>
&lt;td align="left">0&lt;/td>
&lt;td align="left">MON&lt;/td>
&lt;td align="left">GOOD&lt;/td>
&lt;td align="right">1.23&lt;/td>
&lt;td align="right">43.7&lt;/td>
&lt;td align="right">16.6&lt;/td>
&lt;td align="right">1349&lt;/td>
&lt;td align="right">2&lt;/td>
&lt;/tr>
&lt;tr class="even">
&lt;td align="left">SPRING&lt;/td>
&lt;td align="left">2011&lt;/td>
&lt;td align="left">JAN&lt;/td>
&lt;td align="left">0&lt;/td>
&lt;td align="left">TUE&lt;/td>
&lt;td align="left">GOOD&lt;/td>
&lt;td align="right">1.40&lt;/td>
&lt;td align="right">59.0&lt;/td>
&lt;td align="right">10.7&lt;/td>
&lt;td align="right">1562&lt;/td>
&lt;td align="right">3&lt;/td>
&lt;/tr>
&lt;tr class="odd">
&lt;td align="left">SPRING&lt;/td>
&lt;td align="left">2011&lt;/td>
&lt;td align="left">JAN&lt;/td>
&lt;td align="left">0&lt;/td>
&lt;td align="left">WED&lt;/td>
&lt;td align="left">GOOD&lt;/td>
&lt;td align="right">2.67&lt;/td>
&lt;td align="right">43.7&lt;/td>
&lt;td align="right">12.5&lt;/td>
&lt;td align="right">1600&lt;/td>
&lt;td align="right">4&lt;/td>
&lt;/tr>
&lt;tr class="even">
&lt;td align="left">SPRING&lt;/td>
&lt;td align="left">2011&lt;/td>
&lt;td align="left">JAN&lt;/td>
&lt;td align="left">0&lt;/td>
&lt;td align="left">THU&lt;/td>
&lt;td align="left">GOOD&lt;/td>
&lt;td align="right">1.60&lt;/td>
&lt;td align="right">51.8&lt;/td>
&lt;td align="right">6.0&lt;/td>
&lt;td align="right">1606&lt;/td>
&lt;td align="right">5&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div id="model-training" class="section level3">
&lt;h3>Model Training&lt;/h3>
&lt;p>We use a linear model &lt;span class="citation">(R Core Team 2019)&lt;/span>, an SVM &lt;span class="citation">(Meyer et al. 2019)&lt;/span>,
a random decision forest &lt;span class="citation">(Breiman et al. 2018)&lt;/span> and gradient boosting &lt;span class="citation">(Greenwell et al. 2019)&lt;/span>.
We compare the performance of all models and the performance
of predicting the mean for each observation on a hold-out test set
(see table &lt;a href="#tab:bikes-model-training">2&lt;/a>).
The linear model performs relatively well
but we can improve by using a more complex machine learning model
even without extensive tuning.&lt;/p>
&lt;table>
&lt;caption>&lt;span id="tab:bikes-model-training">Table 2: &lt;/span>Mean squared error, root mean squared log error,
and R squared for hold-out test set&lt;/caption>
&lt;thead>
&lt;tr class="header">
&lt;th>&lt;/th>
&lt;th align="right">mean(y)&lt;/th>
&lt;th align="right">lm&lt;/th>
&lt;th align="right">svm&lt;/th>
&lt;th align="right">rf&lt;/th>
&lt;th align="right">gbm&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr class="odd">
&lt;td>mse&lt;/td>
&lt;td align="right">3.75e+06&lt;/td>
&lt;td align="right">5.30e+05&lt;/td>
&lt;td align="right">4.33e+05&lt;/td>
&lt;td align="right">4.22e+05&lt;/td>
&lt;td align="right">4.12e+05&lt;/td>
&lt;/tr>
&lt;tr class="even">
&lt;td>rmsle&lt;/td>
&lt;td align="right">5.93e-01&lt;/td>
&lt;td align="right">2.36e-01&lt;/td>
&lt;td align="right">2.44e-01&lt;/td>
&lt;td align="right">2.61e-01&lt;/td>
&lt;td align="right">2.30e-01&lt;/td>
&lt;/tr>
&lt;tr class="odd">
&lt;td>rsq&lt;/td>
&lt;td align="right">0.00e+00&lt;/td>
&lt;td align="right">8.59e-01&lt;/td>
&lt;td align="right">8.85e-01&lt;/td>
&lt;td align="right">8.88e-01&lt;/td>
&lt;td align="right">8.90e-01&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;div id="analysis" class="section level3">
&lt;h3>Analysis&lt;/h3>
&lt;p>Now analyse how changing feature values influences
the predicted number of bikes.
We focus on the three numerical features &lt;code>temp&lt;/code> (temperature in degree Celsius),
&lt;code>hum&lt;/code> (humidity in percent) and &lt;code>windspeed&lt;/code> (in kilometers per hour).
We apply our method to each of the complex models with default settings.
The output in &lt;code>R&lt;/code> looks as follows:&lt;/p>
&lt;pre>&lt;code>## lm:
## temp hum windspeed
## 98.2 -13.7 -40.1
## SVM (temp)
## [-5.221, 19.26) [19.26, 32.498]
## 128.11 3.87
## SVM (hum)
## [18.792, 56.792) [56.792, 93.957]
## 7.19 -32.71
## SVM (windspeed)
## [2.834, 14.876) [14.876, 34]
## -22.7 -64.7
## RF (temp)
## [-5.221, 20.278) [20.278, 32.498]
## 104.5 -62.7
## RF (hum)
## [18.792, 64.667) [64.667, 93.957]
## -1.18 -31.97
## RF (windspeed)
## [2.834, 18.417) [18.417, 24.251) [24.251, 34]
## -16.46 -78.30 -1.64
## GBM (temp)
## [-5.221, 16.792) [16.792, 26.075) [26.075, 32.498]
## 124.2 13.9 -239.7
## GBM (hum)
## [18.792, 64.667) [64.667, 83.792) [83.792, 87.25) [87.25, 93.957]
## -3.86 -39.63 -227.00 91.19
## GBM (windspeed)
## [2.834, 8.584) [8.584, 22.959) [22.959, 24.251) [24.251, 34]
## -5.32e+01 -1.85e+01 -5.04e+02 6.60e-14&lt;/code>&lt;/pre>
&lt;p>The marginal effect of the linear model is equal to the model coefficients.
So according to the model an increase of the temperature by 1° Celsius
leads to a predicted increase of &lt;span class="math inline">\(98.188\)&lt;/span>. rented bicycles per day.
This seems plausible for an average day.
The higher the temperature the more people are willing to go by bike.
But one could easily imagine that a temperature rise on a hot day
will make people less likely rent a bike to avoid physical exertion.
This is exactly what the results of the complex models suggest.
Below 20° the SVM predicts an increase of
&lt;span class="math inline">\(128.106\)&lt;/span>
bikes per day for an additional degree Celsius.
Above 20° the effect becomes negative and very small
&lt;span class="math inline">\((3.867)\)&lt;/span>.
The results of the random forest show two cutoff points.
At around 13° the positive marginal effect becomes smaller in size
and above 25° the effect is negative.
The effect for gradient boosting is partitioned into four intervals.
The effect of the three intervals below 27° are positive,
above 27° it is negative, similarly to the results of the other two models.
However, the absolute values of the effect fluctuate substantially
for gradient boosting.&lt;/p>
&lt;p>For humidity the linear model predicts a negative effect.
For the SVM the effect is positive up to around 43%.
Between 43% and 65% the effect is negative but smaller in size.
Above 65% it is negative and
four times bigger than in the previous interval.
The results for the random forest and gradient boosting
both show very small effects below roughly 65% humidity.
Above this point both models predict a decrease of rented bicycles
with rising humidity.
The histogram (figure &lt;a href="#fig:bikes-hum-hist">1&lt;/a>) explains
why the effect for humidity is probably non-monotonic.
Humidity usually is between 50% to 75%.
Values outside this range indicate more extreme weather conditions.
If uncommonly dry or wet air reduces people’s desire to ride a bike
we will expect a positive effect on the number of rented bikes
if humidity is below the familiar range, and a negative effect if it is above.&lt;/p>
&lt;div class="figure" style="text-align: center">&lt;span id="fig:bikes-hum-hist">&lt;/span>
&lt;img src="figures/bikes-hum-hist-1.png" alt="Histogram for feature humidity of the Bike Sharing dataset." width="40%" />
&lt;p class="caption">
Figure 1: Histogram for feature &lt;code>humidity&lt;/code> of the Bike Sharing dataset.
&lt;/p>
&lt;/div>
&lt;p>Wind makes cycling less attractive, so one associates higher wind speed
with a reduced willingness to rent a bike.
The linear model predicts a negative effect (&lt;span class="math inline">\(-40.149\)&lt;/span>).
For both SVM and random forest our method proposes a negative effect
that is constant over the whole feature distribution.
Consequently, in the case of wind speed a linear model seems to be appropriate
to represent the relationship.
Gradient boosting shows a negative effect for five intervals,
the reported values are not very stable, again.&lt;/p>
&lt;p>In this exemplary application we showed that
the linear model does not suffice to represent the varying response function types.
A user may come to wrong conclusions about the number of rented bikes
depending on the weather conditions of the day.
The proposed method enables the user to make quantitative statements
as if he was using a linear model
while preserving the non-linear, non-monotonic relationship where necessary.
Thus, he can combine a better performing model with a comprehensible interpretation.
The results for the gradient boosting model are less convincing.
Due to the stepped response function the model is less appropriate
for making quantitative statements about the feature effect.
The estimates fluctuate between high values and values close to zero.&lt;/p>
&lt;div class="figure" style="text-align: center">&lt;span id="fig:bikes-results-svm">&lt;/span>
&lt;img src="figures/bikes-results-svm-1.png" alt="Bike sharing data. Results SVM." width="1152" />
&lt;p class="caption">
Figure 2: Bike sharing data. Results SVM.
&lt;/p>
&lt;/div>
&lt;div class="figure" style="text-align: center">&lt;span id="fig:bikes-results-gbm">&lt;/span>
&lt;img src="figures/bikes-results-gbm-1.png" alt="Bike sharing data. Results gradient boosting." width="1152" />
&lt;p class="caption">
Figure 3: Bike sharing data. Results gradient boosting.
&lt;/p>
&lt;/div>
&lt;div class="figure" style="text-align: center">&lt;span id="fig:bikes-results-rf">&lt;/span>
&lt;img src="figures/bikes-results-rf-1.png" alt="Bike sharing data. Results random forest." width="1152" />
&lt;p class="caption">
Figure 4: Bike sharing data. Results random forest.
&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="r-package" class="section level2">
&lt;h2>R package&lt;/h2>
&lt;p>The method is implemented in &lt;strong>R&lt;/strong> supporting a variety of models out of the box.
Source code and more information can be found on GitHub:
&lt;a href="https://github.com/BodoBurger/intame" class="uri">https://github.com/BodoBurger/intame&lt;/a>&lt;/p>
&lt;/div>
&lt;div id="references" class="section level2 unnumbered">
&lt;h2>References&lt;/h2>
&lt;div id="refs" class="references">
&lt;div id="ref-R-randomForest">
&lt;p>Breiman, Leo, Adele Cutler, Andy Liaw, and Matthew Wiener. 2018. &lt;em>RandomForest: Breiman and Cutler’s Random Forests for Classification and Regression&lt;/em>. &lt;a href="https://CRAN.R-project.org/package=randomForest">https://CRAN.R-project.org/package=randomForest&lt;/a>.&lt;/p>
&lt;/div>
&lt;div id="ref-fanaee2013event">
&lt;p>Fanaee-T, Hadi, and Joao Gama. 2013. “Event Labeling Combining Ensemble Detectors and Background Knowledge.” &lt;em>Progress in Artificial Intelligence&lt;/em>. Springer Berlin Heidelberg, 1–15. &lt;a href="https://doi.org/10.1007/s13748-013-0040-3">https://doi.org/10.1007/s13748-013-0040-3&lt;/a>.&lt;/p>
&lt;/div>
&lt;div id="ref-R-gbm">
&lt;p>Greenwell, Brandon, Bradley Boehmke, Jay Cunningham, and GBM Developers. 2019. &lt;em>Gbm: Generalized Boosted Regression Models&lt;/em>. &lt;a href="https://CRAN.R-project.org/package=gbm">https://CRAN.R-project.org/package=gbm&lt;/a>.&lt;/p>
&lt;/div>
&lt;div id="ref-R-e1071">
&lt;p>Meyer, David, Evgenia Dimitriadou, Kurt Hornik, Andreas Weingessel, and Friedrich Leisch. 2019. &lt;em>E1071: Misc Functions of the Department of Statistics, Probability Theory Group (Formerly: E1071), Tu Wien&lt;/em>. &lt;a href="https://CRAN.R-project.org/package=e1071">https://CRAN.R-project.org/package=e1071&lt;/a>.&lt;/p>
&lt;/div>
&lt;div id="ref-molnar2018interpretable">
&lt;p>Molnar, Christoph. 2018. &lt;em>Interpretable Machine Learning - a Guide for Making Black Box Models Explainable&lt;/em>. Creative Commons. &lt;a href="https://christophm.github.io/interpretable-ml-book/">https://christophm.github.io/interpretable-ml-book/&lt;/a>.&lt;/p>
&lt;/div>
&lt;div id="ref-R-base">
&lt;p>R Core Team. 2019. &lt;em>R: A Language and Environment for Statistical Computing&lt;/em>. Vienna, Austria: R Foundation for Statistical Computing. &lt;a href="https://www.R-project.org/">https://www.R-project.org/&lt;/a>.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>Use R, Google Sheets and a nutrition API to calculate a nutrition table</title><link>https://bodoburger.github.io/post/2019-04-nutrition-table-google-sheets/</link><pubDate>Mon, 01 Apr 2019 00:00:00 +0000</pubDate><guid>https://bodoburger.github.io/post/2019-04-nutrition-table-google-sheets/</guid><description>
&lt;p>I recently stumbled upon this
&lt;a href="https://greenysherry.com/life-changing-brot-mit-nuessen-nach-my-new-roots-glutenfrei-vegan/">bread recipe&lt;/a>.
It’s quickly prepared, the bread tastes great and is full of valuable ingredients
(only oats, nuts and seeds).
However, being homemade it does not come with a nutrition table.
The following shows an easy way to create one.&lt;/p>
&lt;p>We put the recipe into a spreadsheet
(&lt;a href="https://docs.google.com/spreadsheets/d/1C0AwjQYrudrV3ZLgQJZnCr9La7OVftRTZn3QKMrJx5E">recipe&lt;/a>).
Another spreadsheet contains the nutritional values of the macro nutrients of each ingredient
(&lt;a href="https://docs.google.com/spreadsheets/d/1qgo8Yefb5nx5PVElZvmf6nSDI6RfN2ofd8CeMuSklHk">food stats&lt;/a>).
We combine these using &lt;strong>R&lt;/strong> to get the nutrition table.
Then, we look at an alternative to manually creating a spreadsheet with nutritional information
by using an online database.
As a bonus, we can calculate the price of the recipe.&lt;/p>
&lt;div id="downloading-google-sheets-to-r" class="section level2">
&lt;h2>Downloading Google Sheets to R&lt;/h2>
&lt;p>A simple way to import Google Sheets to &lt;strong>R&lt;/strong> is the
&lt;a href="https://cran.r-project.org/package=gsheet">gsheet&lt;/a> package.
We only need to supply the sharing link.
It returns a &lt;a href="https://tibble.tidyverse.org/">tibble&lt;/a>.&lt;/p>
&lt;pre class="r">&lt;code>food_stats = gsheet::gsheet2tbl(&amp;quot;https://docs.google.com/spreadsheets/d/1qgo8Yefb5nx5PVElZvmf6nSDI6RfN2ofd8CeMuSklHk&amp;quot;)
recipe = gsheet::gsheet2tbl(&amp;quot;https://docs.google.com/spreadsheets/d/1C0AwjQYrudrV3ZLgQJZnCr9La7OVftRTZn3QKMrJx5E&amp;quot;)&lt;/code>&lt;/pre>
&lt;p>&lt;code>food_stats&lt;/code> contains more ingredients than we need for our bread recipe.
So when we merge both data frames we only want to keep the rows
that contain the ingredients of the recipe.
This is done by &lt;code>left_join()&lt;/code> from the
&lt;a href="https://cran.r-project.org/package=dplyr">dplyr&lt;/a> package.&lt;/p>
&lt;pre class="r">&lt;code>library(dplyr)
bread_ingredient_stats = left_join(recipe, food_stats, &amp;quot;Description&amp;quot;)&lt;/code>&lt;/pre>
&lt;/div>
&lt;div id="calculating-the-nutritional-values" class="section level2">
&lt;h2>Calculating the nutritional values&lt;/h2>
&lt;p>We have 10 ingredients. First, we create a vector that gives us
the quantity of each ingredient in grams,
then we select the columns that are relevant for the nutrition table.&lt;/p>
&lt;pre class="r">&lt;code>nutrient_names = c(&amp;quot;Calories (kcal)&amp;quot;, &amp;quot;Total Fat&amp;quot;, &amp;quot;Saturated Fat&amp;quot;,
&amp;quot;Total Carbs&amp;quot;, &amp;quot;Sugar&amp;quot;, &amp;quot;Dietary Fiber&amp;quot;, &amp;quot;Protein&amp;quot;)
quantities = select(bread_ingredient_stats, &amp;quot;Quantity (gr)&amp;quot;)[[1]]
nutrition_values = bread_ingredient_stats %&amp;gt;% select(nutrient_names)&lt;/code>&lt;/pre>
&lt;p>The following calculation gives us the quantity of
each macro nutrient in our bread &lt;em>per 100g&lt;/em>:&lt;/p>
&lt;pre class="r">&lt;code>nutrition_table = colSums(nutrition_values * quantities) / sum(quantities)&lt;/code>&lt;/pre>
&lt;p>Finally, we can print our nutrition table:&lt;/p>
&lt;pre class="r">&lt;code>knitr::kable(nutrition_table, digits = 1, col.names = &amp;quot;per 100g&amp;quot;,
caption = &amp;quot;Nutrition table&amp;quot;)&lt;/code>&lt;/pre>
&lt;table>
&lt;caption>&lt;span id="tab:unnamed-chunk-5">Table 1: &lt;/span>Nutrition table&lt;/caption>
&lt;thead>
&lt;tr class="header">
&lt;th>&lt;/th>
&lt;th align="right">per 100g&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr class="odd">
&lt;td>Calories (kcal)&lt;/td>
&lt;td align="right">307.3&lt;/td>
&lt;/tr>
&lt;tr class="even">
&lt;td>Total Fat&lt;/td>
&lt;td align="right">22.5&lt;/td>
&lt;/tr>
&lt;tr class="odd">
&lt;td>Saturated Fat&lt;/td>
&lt;td align="right">4.7&lt;/td>
&lt;/tr>
&lt;tr class="even">
&lt;td>Total Carbs&lt;/td>
&lt;td align="right">12.2&lt;/td>
&lt;/tr>
&lt;tr class="odd">
&lt;td>Sugar&lt;/td>
&lt;td align="right">0.5&lt;/td>
&lt;/tr>
&lt;tr class="even">
&lt;td>Dietary Fiber&lt;/td>
&lt;td align="right">10.6&lt;/td>
&lt;/tr>
&lt;tr class="odd">
&lt;td>Protein&lt;/td>
&lt;td align="right">12.6&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Calorie-wise very similar to your &lt;a href="https://www.google.com/search?q=brown+bread">typical brown bread&lt;/a>, but rich in fat.
Trust me, the bread is very filling, so you won’t be able to eat too much of it anyways.
And how much does it cost?&lt;/p>
&lt;pre class="r">&lt;code>prices = select(bread_ingredient_stats, &amp;quot;Price (€)&amp;quot;)[[1]]
packaging = select(bread_ingredient_stats, &amp;quot;Packaging (g)&amp;quot;)[[1]]
(price_total = sum(prices / packaging * quantities, na.rm = TRUE))&lt;/code>&lt;/pre>
&lt;pre>&lt;code>## [1] 3.208962&lt;/code>&lt;/pre>
&lt;p>One loaf of bread is 3.21€ (not including energy and time)
weighing 910 grams (raw ingredients).
I think that is a fair price for a bread I can eat from for a whole week.&lt;/p>
&lt;/div>
&lt;div id="using-the-api-of-a-nutrition-database" class="section level2">
&lt;h2>Using the API of a nutrition database&lt;/h2>
&lt;p>Instead of manually creating a spreadsheet for the nutritional values of each ingredient
we can fetch the information from on online database.
We use &lt;a href="https://openfoodfacts.org">openfoodfacts&lt;/a>.
It’s a crowd-sourced database of food stats.
To identify a product we need a barcode for each ingredient
which I added to the recipe spreadsheet.
The openfoodfacts API returns a JSON file which we can convert to a list
using the &lt;a href="https://cran.r-project.org/package=rjson">rjson&lt;/a> package.
We write two helper functions to fetch and extract the relevant information.&lt;/p>
&lt;pre class="r">&lt;code>library(&amp;quot;rjson&amp;quot;)
fetch_json = function(barcode, url = &amp;quot;https://world.openfoodfacts.org/api/v0/product/&amp;quot;) {
query = paste0(url, barcode, &amp;quot;.json&amp;quot;)
fromJSON(file = query)
}
extract_nutrition_values = function(food_list,
nutriments = c(&amp;quot;energy_100g&amp;quot;, &amp;quot;fat_100g&amp;quot;, &amp;quot;saturated-fat_100g&amp;quot;,
&amp;quot;carbohydrates_100g&amp;quot;, &amp;quot;sugars_100g&amp;quot;, &amp;quot;fiber_100g&amp;quot;,
&amp;quot;proteins_100g&amp;quot;)) {
nv = setNames(rep(0, length(nutriments)), nutriments)
tmp = unlist(food_list$product$nutriments[nutriments])
nv[names(tmp)] = tmp
nv
}
barcodes = bread_ingredient_stats$Barcode[-10] # water does not have a barcode
nutrition_values_api = matrix(0, nrow = 10, ncol = length(nutrition_values),
dimnames = list(1:10, nutrient_names))
for(i in seq_along(barcodes)) {
food_list_tmp = fetch_json(barcodes[i])
nutrition_values_api[i,] = extract_nutrition_values(food_list_tmp)
}&lt;/code>&lt;/pre>
&lt;p>&lt;code>nutrition_values_api&lt;/code> has the same structure as &lt;code>nutrition_values&lt;/code> from above,
so we can proceed as before:&lt;/p>
&lt;pre class="r">&lt;code>(nutrition_table_api = colSums(nutrition_values_api * quantities) / sum(quantities))&lt;/code>&lt;/pre>
&lt;pre>&lt;code>## Calories (kcal) Total Fat Saturated Fat Total Carbs
## 1344.0329670 22.4906593 4.7263736 12.3516484
## Sugar Dietary Fiber Protein
## 0.4923077 8.9291209 12.5313187&lt;/code>&lt;/pre>
&lt;p>The results for the macro nutrients differ slightly which is expected
because we changed the data source.
However, the value for &lt;em>calories&lt;/em> quadrupled
because the API reported energy in kilojoule (kJ) instead of kilocalories.
To correct for this we divide the value by &lt;span class="math inline">\(4.1858\)&lt;/span>.&lt;/p>
&lt;pre class="r">&lt;code>nutrition_table_api[1] = nutrition_table_api[1] / 4.1858
knitr::kable(nutrition_table_api, digits = 1, col.names = &amp;quot;per 100g&amp;quot;,
caption = &amp;quot;Nutrition table&amp;quot;)&lt;/code>&lt;/pre>
&lt;table>
&lt;caption>&lt;span id="tab:unnamed-chunk-9">Table 2: &lt;/span>Nutrition table&lt;/caption>
&lt;thead>
&lt;tr class="header">
&lt;th>&lt;/th>
&lt;th align="right">per 100g&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr class="odd">
&lt;td>Calories (kcal)&lt;/td>
&lt;td align="right">321.1&lt;/td>
&lt;/tr>
&lt;tr class="even">
&lt;td>Total Fat&lt;/td>
&lt;td align="right">22.5&lt;/td>
&lt;/tr>
&lt;tr class="odd">
&lt;td>Saturated Fat&lt;/td>
&lt;td align="right">4.7&lt;/td>
&lt;/tr>
&lt;tr class="even">
&lt;td>Total Carbs&lt;/td>
&lt;td align="right">12.4&lt;/td>
&lt;/tr>
&lt;tr class="odd">
&lt;td>Sugar&lt;/td>
&lt;td align="right">0.5&lt;/td>
&lt;/tr>
&lt;tr class="even">
&lt;td>Dietary Fiber&lt;/td>
&lt;td align="right">8.9&lt;/td>
&lt;/tr>
&lt;tr class="odd">
&lt;td>Protein&lt;/td>
&lt;td align="right">12.5&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>And we are done!&lt;/p>
&lt;/div></description></item><item><title>Data Analysis for Helmholtz Zentrum München</title><link>https://bodoburger.github.io/project/2017-biomarker-helmholtz/</link><pubDate>Fri, 07 Apr 2017 00:00:00 +0000</pubDate><guid>https://bodoburger.github.io/project/2017-biomarker-helmholtz/</guid><description>
&lt;p>The goal of the project was to quantify the relative importance
of different metabolic pathways for coronary heart disease and type 2 diabetes.
We analyzed data from the &lt;a href="https://www.helmholtz-muenchen.de/kora">KORA study&lt;/a>
for which more than 15000 people are repeatedly medically examined since 1984.
The main features of the analysis were 47 different biomarkers (see the image above)
that represent different metabolic pathways.
Additionally we controlled for several personal characteristics like sex or age.
The target features were the incidence of the disease and
the time until the incidence.
Before the analysis missing data was imputed.
We modeled the data using a Cox proportional hazards model.
The &lt;em>case-cohort&lt;/em> study design &lt;span class="citation">(Barlow 1994)&lt;/span> was taken into account
by weighing the data according to &lt;span class="citation">Barlow et al. (1999)&lt;/span>
upon request of our project partners.
Because this weighing method is not supported
by the R package &lt;code>survival&lt;/code> &lt;span class="citation">(Therneau 2015)&lt;/span>
we had to implement the routine by ourselves.
The estimation of the relative contribution of different biomarkers
to the risk of the disease was done as proposed by &lt;span class="citation">Montonen et al. (2011)&lt;/span>.
Finally, estimations from multiple imputations had to be combined
following Rubin’s rules &lt;span class="citation">(Rubin 1987)&lt;/span>.&lt;/p>
&lt;p>A paper using the results from this project was published in March 2020
(&lt;a href="https://cardiab.biomedcentral.com/articles/10.1186/s12933-020-01003-w">Huth et al “Biomarker-defined pathways for incident type 2 diabetes and coronary heart disease”&lt;/a>).&lt;/p>
&lt;div id="references" class="section level2 unnumbered">
&lt;h2>References&lt;/h2>
&lt;div id="refs" class="references">
&lt;div id="ref-barlow1994robust">
&lt;p>Barlow, William E. 1994. “Robust Variance Estimation for the Case-Cohort Design.” &lt;em>Biometrics&lt;/em>. JSTOR, 1064–72.&lt;/p>
&lt;/div>
&lt;div id="ref-barlow1999analysis">
&lt;p>Barlow, William E, Laura Ichikawa, Dan Rosner, and Shizue Izumi. 1999. “Analysis of Case-Cohort Designs.” &lt;em>Journal of Clinical Epidemiology&lt;/em> 52 (12). Elsevier: 1165–72.&lt;/p>
&lt;/div>
&lt;div id="ref-montonen2011estimation">
&lt;p>Montonen, Jukka, Dagmar Drogan, Hans-Georg Joost, Heiner Boeing, Andreas Fritsche, Erwin Schleicher, Matthias B Schulze, and Tobias Pischon. 2011. “Estimation of the Contribution of Biomarkers of Different Metabolic Pathways to Risk of Type 2 Diabetes.” &lt;em>European Journal of Epidemiology&lt;/em> 26 (1). Springer: 29–38.&lt;/p>
&lt;/div>
&lt;div id="ref-rubin1987multiple">
&lt;p>Rubin, D.B. 1987. &lt;em>Multiple Imputation for Nonresponse in Surveys&lt;/em>. Wiley Series in Probability and Statistics. Wiley.&lt;/p>
&lt;/div>
&lt;div id="ref-survival-package">
&lt;p>Therneau, Terry M. 2015. &lt;em>A Package for Survival Analysis in S&lt;/em>. &lt;a href="https://CRAN.R-project.org/package=survival">https://CRAN.R-project.org/package=survival&lt;/a>.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>Fundamentals of Neural Networks</title><link>https://bodoburger.github.io/project/2016-fundamentals-neural-networks/</link><pubDate>Sat, 30 Jan 2016 00:00:00 +0000</pubDate><guid>https://bodoburger.github.io/project/2016-fundamentals-neural-networks/</guid><description/></item><item><title>German Healthcare System - Risk Selection and Two-tier Medicine</title><link>https://bodoburger.github.io/project/2014-german-healthcare-system/</link><pubDate>Tue, 26 Aug 2014 00:00:00 +0000</pubDate><guid>https://bodoburger.github.io/project/2014-german-healthcare-system/</guid><description/></item><item><title>Measuring the effects of a general minimum wage</title><link>https://bodoburger.github.io/project/2013-minimum-wages/</link><pubDate>Tue, 26 Aug 2014 00:00:00 +0000</pubDate><guid>https://bodoburger.github.io/project/2013-minimum-wages/</guid><description>
&lt;figure >
&lt;a data-fancybox="" href="https://bodoburger.github.io/project/2013-minimum-wages/table1_hu7036a69ed3696bf8f3469f99c4de04e0_47624_2000x2000_fit_lanczos_2.png" >
&lt;img data-src="https://bodoburger.github.io/project/2013-minimum-wages/table1_hu7036a69ed3696bf8f3469f99c4de04e0_47624_2000x2000_fit_lanczos_2.png" class="lazyload" alt="" width="1046" height="341">
&lt;/a>
&lt;/figure>
&lt;figure >
&lt;a data-fancybox="" href="https://bodoburger.github.io/project/2013-minimum-wages/table2_hu1a89bde7ff415e0897fff6b265fa8503_47259_2000x2000_fit_lanczos_2.png" >
&lt;img data-src="https://bodoburger.github.io/project/2013-minimum-wages/table2_hu1a89bde7ff415e0897fff6b265fa8503_47259_2000x2000_fit_lanczos_2.png" class="lazyload" alt="" width="1049" height="341">
&lt;/a>
&lt;/figure></description></item><item><title/><link>https://bodoburger.github.io/aboutme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bodoburger.github.io/aboutme/</guid><description/></item><item><title/><link>https://bodoburger.github.io/contact/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bodoburger.github.io/contact/</guid><description/></item><item><title/><link>https://bodoburger.github.io/my-projects/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bodoburger.github.io/my-projects/</guid><description/></item><item><title>Amazon Web Services Overview</title><link>https://bodoburger.github.io/notes/cloud-services/aws/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bodoburger.github.io/notes/cloud-services/aws/</guid><description>&lt;h2 id="aws-analytics-services">AWS Analytics Services&lt;/h2>
&lt;ul>
&lt;li>Amazon ElasticSearch
&lt;ul>
&lt;li>search engine&lt;/li>
&lt;li>&lt;a href="https://aws.amazon.com/elasticsearch-service/faqs/">https://aws.amazon.com/elasticsearch-service/faqs/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Elasticsearch">https://en.wikipedia.org/wiki/Elasticsearch&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Amazon Elastic MapReduce
&lt;ul>
&lt;li>process vast amounts of data using Hadoop framework&lt;/li>
&lt;li>&lt;a href="https://aws.amazon.com/emr/faqs/">https://aws.amazon.com/emr/faqs/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Apache_Hadoop">https://en.wikipedia.org/wiki/Apache_Hadoop&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Amazon Kinesis
&lt;ul>
&lt;li>collect, process, and analyze video and data streams in real time&lt;/li>
&lt;li>Kinesis Data Firehose&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Amazon Redshift
&lt;ul>
&lt;li>data warehouse: &lt;a href="https://en.wikipedia.org/wiki/Data_warehouse">https://en.wikipedia.org/wiki/Data_warehouse&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Amazon Athena
&lt;ul>
&lt;li>interactive query service using standard SQL&lt;/li>
&lt;li>for data stored in S3 instance&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="aws-compute-services">AWS Compute Services&lt;/h2>
&lt;ul>
&lt;li>Amazon Elastic Compute Cloud (EC2)
&lt;ul>
&lt;li>resizable compute capacity in the cloud&lt;/li>
&lt;li>different instance types with varying hardware configurations
(A1, T3, T2, M5, &amp;hellip;)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Amazon Lightsail
&lt;ul>
&lt;li>virtual private servers&lt;/li>
&lt;li>SSD-based storage, data transfer, DNS management, and a static IP&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Amazon Elastic Container Service (ECS)
&lt;ul>
&lt;li>container management service using Docker&lt;/li>
&lt;li>&lt;a href="https://de.wikipedia.org/wiki/Docker_(Software)">https://de.wikipedia.org/wiki/Docker_(Software)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Amazon Lambda
&lt;ul>
&lt;li>run code without managing servers&lt;/li>
&lt;li>serverless computing&lt;/li>
&lt;li>natively supports Java, Go, PowerShell, Node.js, C#, Python, and Ruby code&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="aws-database-services">AWS Database Services&lt;/h2>
&lt;ul>
&lt;li>Amazon DynamoDB
&lt;ul>
&lt;li>NoSQL database&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Amazon_DynamoDB">https://en.wikipedia.org/wiki/Amazon_DynamoDB&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Amazon Relational Database Service (RDS)
&lt;ul>
&lt;li>manages relational database in the cloud&lt;/li>
&lt;li>supports Amazon Aurora, MySQL, MariaDB, Oracle, SQL Server, and PostgreSQL database engines&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Amazon Redshift
&lt;ul>
&lt;li>data warehouse&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Amazon Aurora
&lt;ul>
&lt;li>MySQL and PostgreSQL compatible relational database built for the cloud&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="aws-developer-tools">AWS Developer Tools&lt;/h2>
&lt;ul>
&lt;li>Amazon CodeCommit
&lt;ul>
&lt;li>source control service using Git repositories&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Amazon CodePipeline
&lt;ul>
&lt;li>continuous integration and continuous delivery&lt;/li>
&lt;li>builds, tests, and deploys code every time it is changed&lt;/li>
&lt;li>can be used with GitHub&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Amazon CodeBuild
&lt;ul>
&lt;li>build and test code with continuous scaling&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Amazon CodeDeploy
&lt;ul>
&lt;li>automates software deployments&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="aws-management-tools">AWS Management Tools&lt;/h2>
&lt;ul>
&lt;li>Amazon CloudFormation
&lt;ul>
&lt;li>model and provision all of your cloud infrastructure resources&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Amazon CloudWatch
&lt;ul>
&lt;li>monitor resources and applications&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Amazon Systems Manager&lt;/li>
&lt;li>Amazon CloudTrail
&lt;ul>
&lt;li>user activity&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="aws-networking-and-content-delivery-services">AWS Networking and Content Delivery Services&lt;/h2>
&lt;ul>
&lt;li>Amazon Virtual Private Cloud (VPC)
&lt;ul>
&lt;li>isolate cloud resources with your own private virtual network&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Amazon Direct Connect
&lt;ul>
&lt;li>dedicated network connection between your network and your Amazon VPC&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Amazon Route 53
&lt;ul>
&lt;li>cloud DNS to connect user requests to AWS resources&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Amazon Elastic Load Balancing
&lt;ul>
&lt;li>distributes application traffic across EC2 instances&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Amazon CloudFront
&lt;ul>
&lt;li>content delivery network (CDN)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="aws-storage-services">AWS Storage Services&lt;/h2>
&lt;ul>
&lt;li>
&lt;h2 id="amazon-elastic-block-storage-ebs">Amazon Elastic Block Storage (EBS)&lt;/h2>
&lt;/li>
&lt;li>Amazon Elastic File System (EFS)
&lt;ul>
&lt;li>store and share data in scalable file systems&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Amazon S3
&lt;ul>
&lt;li>object storage&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Amazon Glacier
&lt;ul>
&lt;li>archive data in low-cost storage&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>Basics</title><link>https://bodoburger.github.io/notes/big-data/big-data-basics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bodoburger.github.io/notes/big-data/big-data-basics/</guid><description>&lt;h2 id="goal-of-data-analysis">Goal of data analysis&lt;/h2>
&lt;p>Decision making often involves uncertainty (uncertain situations, uncertain impacts).
We assume that existing data contains information that we can use
to model uncertain situations, predict outcomes, or unknown parameters.&lt;/p>
&lt;p>Related disciplines: statistics, artificial intelligence, machine learning,
data mining and knowledge discovery, deep learning, reinforcement learning.&lt;/p>
&lt;h2 id="knowledge-discovery-process">Knowledge discovery process&lt;/h2>
&lt;pre>&lt;code class="language-mermaid">graph TD;
A(databases or other data sources)
B(data warehouse)
C(task-relevant data)
D(patterns)
E(knowledge)
A --&amp;gt;|data cleaning| B
B --&amp;gt;|data selection| C
C --&amp;gt;|data mining| D
D --&amp;gt;|visualization| E
&lt;/code>&lt;/pre>
&lt;h2 id="v-model-of-big-data">V model of big data&lt;/h2>
&lt;p>The initial three V&amp;rsquo;s are:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>volume&lt;/strong>:
huge amount of data so large that it cannot be analyzed using traditional methods;
high number of instances or features&lt;/li>
&lt;li>&lt;strong>variety&lt;/strong>:
large proportion of data is unstructured; there are different types of data
(e.g. spreadsheets, images, videos); different data formats&lt;/li>
&lt;li>&lt;strong>velocity&lt;/strong>:
data can be generated, changed and analyzed within short time spans
(e.g. milliseconds)&lt;/li>
&lt;/ul>
&lt;p>Additionally suggested V&amp;rsquo;s:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>veracity / validity&lt;/strong>:
credibility of the data, the high volume of data leads to different degrees
of data quality;
interfering factors can be noise, manipulation or misinterpretation&lt;/li>
&lt;li>&lt;strong>value&lt;/strong>:
added value by investments of companies in big data infrastructure&lt;/li>
&lt;/ul>
&lt;h2 id="different-types-of-tasks">Different types of tasks&lt;/h2>
&lt;ul>
&lt;li>classification
&lt;ul>
&lt;li>e.g. image classification, document categorization&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>regression
&lt;ul>
&lt;li>e.g. housing values&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>clustering
&lt;ul>
&lt;li>e.g. customer segmentation&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>outlier detection&lt;/li>
&lt;li>frequent itemset mining
&lt;ul>
&lt;li>e.g. market-basket analysis&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;h2 id="application-examples">Application examples&lt;/h2>
&lt;ul>
&lt;li>image recognition&lt;/li>
&lt;li>image processing&lt;/li>
&lt;li>speech recognition&lt;/li>
&lt;li>automatic translation&lt;/li>
&lt;li>game AIs:
&lt;ul>
&lt;li>Deepmind AlphaGo (go), AlphaZero (chess), AlphaStar (StarCraft)&lt;/li>
&lt;li>OpenAI Five (Dota2)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>material requirement planning for manufacturing&lt;/li>
&lt;li>predict capacity utilisation of the passenger train (Deutsche Bahn)&lt;/li>
&lt;/ul>
&lt;h2 id="sources">Sources&lt;/h2>
&lt;ul>
&lt;li>Lecture &lt;strong>Big Data Management and Analytics&lt;/strong> by Prof. Dr. Schubert, Ludwig-Maximilians-Universität München&lt;/li>
&lt;li>&lt;a href="https://whatis.techtarget.com/definition/3Vs">https://whatis.techtarget.com/definition/3Vs&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.unbelievable-machine.com/en/what-is-big-data-definition-five-vs">https://blog.unbelievable-machine.com/en/what-is-big-data-definition-five-vs&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Basics</title><link>https://bodoburger.github.io/notes/git/git-basics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bodoburger.github.io/notes/git/git-basics/</guid><description>&lt;h2 id="rm">&lt;code>rm&lt;/code>&lt;/h2>
&lt;h3 id="remove-files-from-the-index-without-removing-them-from-disc">Remove files from the index without removing them from disc&lt;/h3>
&lt;p>If you forgot to add a file to &lt;code>.gitignore&lt;/code>:&lt;/p>
&lt;pre>&lt;code class="language-Bash">$ git rm -rf --cached file-name
&lt;/code>&lt;/pre>
&lt;p>The file is now untracked and can be added to &lt;code>.gitignore&lt;/code>.
Then, you can commit the deletion and the modified gitignore file.&lt;/p></description></item><item><title>Branching and Merging</title><link>https://bodoburger.github.io/notes/git/git-branch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bodoburger.github.io/notes/git/git-branch/</guid><description>&lt;h2 id="branches">Branches&lt;/h2>
&lt;h3 id="change-branch-without-committing-changes-stash-and-pop">Change branch without committing changes: stash and pop&lt;/h3>
&lt;p>Want to have a look at another branch without committing changes done so far?
Put them in a stash where they can hide until you switch back.&lt;/p>
&lt;pre>&lt;code class="language-Bash">$ git stash # on the original branch
$ git checkout other-branch
# do some stuff on the other branch
$ git checkout original-branch
$ git stash pop
&lt;/code>&lt;/pre>
&lt;p>More about &lt;a href="https://git-scm.com/docs/git-stash" target="_blank" rel="noopener">&lt;em>git-stash&lt;/em>&lt;/a>.&lt;/p>
&lt;h3 id="create-a-local-branch-push-it-to-a-remote-repository-and-track-it">Create a local branch, push it to a remote repository and track it&lt;/h3>
&lt;pre>&lt;code class="language-Bash">$ git checkout -b MyNewBranch # create and switch to new branch
# do some stuff
$ git push -u origin MyNewBranch
&lt;/code>&lt;/pre>
&lt;h3 id="delete-local-branch">Delete local branch&lt;/h3>
&lt;pre>&lt;code class="language-Bash">$ git branch -d MyLocalBranch
&lt;/code>&lt;/pre>
&lt;h2 id="merging">Merging&lt;/h2>
&lt;h3 id="merge-master-into-feature-branch-before-making-a-pr">Merge master into feature branch before making a PR&lt;/h3>
&lt;pre>&lt;code class="language-Bash">$ git checkout master
$ git pull
$ git checkout new-feature
$ git add *files-and-changes*
$ git commit -m &amp;quot;feature description&amp;quot;
$ git reset HEAD --hard # removes all uncommited files
$ rm *untracked-files* # to prevent merge conflicts
$ git merge master
# resolve potential merge conflicts
$ git commit -m &amp;quot;resolved mergeconflicts | merged master&amp;quot;
$ git push origin new-feature
&lt;/code>&lt;/pre></description></item><item><title>Environments</title><link>https://bodoburger.github.io/notes/anaconda/anaconda-environments/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bodoburger.github.io/notes/anaconda/anaconda-environments/</guid><description>&lt;h2 id="create-new-environment-and-switch-to-it">Create new environment and switch to it&lt;/h2>
&lt;pre>&lt;code class="language-bash">conda create -n name_of_new_env
conda activate name_of_new_env
&lt;/code>&lt;/pre>
&lt;p>Create environment with specific python version:&lt;/p>
&lt;pre>&lt;code class="language-bash">conda create -n name_of_new_env python 3.7
&lt;/code>&lt;/pre>
&lt;h2 id="remove-environment">Remove environment&lt;/h2>
&lt;pre>&lt;code class="language-bash">conda remove -n name_of_env --all
# alternative: conda env remove -n name_of_env
&lt;/code>&lt;/pre>
&lt;h2 id="list-all-environments">List all environments&lt;/h2>
&lt;pre>&lt;code class="language-bash">conda env list
&lt;/code>&lt;/pre>
&lt;h2 id="adding-channels-to-environment">Adding channels to environment&lt;/h2>
&lt;p>Activate the environment, then:&lt;/p>
&lt;pre>&lt;code class="language-bash">conda config --env --add channels conda-forge
&lt;/code>&lt;/pre>
&lt;h2 id="sharing-an-environment">Sharing an environment&lt;/h2>
&lt;p>This can be useful if you want to document the package versions for a project or if you are collaborating with other people so they can work with the same environment.&lt;/p>
&lt;pre>&lt;code class="language-bash">conda env export &amp;gt; environment.yml
&lt;/code>&lt;/pre>
&lt;p>To exclude packages that were installed into the environment as a dependency add the flag &lt;code>--from-history&lt;/code>.
This can help for cross-platform compatibility, because &lt;em>conda&lt;/em> will figure out platform-specific dependencies.
However, this will not document the version of a package if the version was not explicitly stated when installing.&lt;/p>
&lt;pre>&lt;code class="language-bash">conda env export --from-history &amp;gt; environment.yml
&lt;/code>&lt;/pre>
&lt;p>To recreate the environment using the &lt;em>yml&lt;/em> file:&lt;/p>
&lt;pre>&lt;code class="language-bash">conda env create -f environment.yml
&lt;/code>&lt;/pre></description></item><item><title>Installing Anaconda</title><link>https://bodoburger.github.io/notes/anaconda/anaconda-install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bodoburger.github.io/notes/anaconda/anaconda-install/</guid><description>&lt;ul>
&lt;li>&lt;a href="https://docs.anaconda.com/anaconda/install/linux/" target="_blank" rel="noopener">Documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.anaconda.com/distribution/#linux" target="_blank" rel="noopener">Installer for Linux&lt;/a>&lt;/li>
&lt;/ul>
&lt;pre>&lt;code>bash ~/Downloads/Anaconda3-2019.03-Linux-x86_64.sh
conda update conda
conda update anaconda
&lt;/code>&lt;/pre>
&lt;h2 id="change-kernel-in-jupyter">Change kernel in jupyter&lt;/h2>
&lt;p>Base environment needs the nb_conda_kernels package.
Every environment needs the ipykernel package.&lt;/p>
&lt;pre>&lt;code>conda install nb_conda_kernels
&lt;/code>&lt;/pre>
&lt;h2 id="deep-learning-environment">Deep learning environment&lt;/h2>
&lt;p>Prereq:&lt;/p>
&lt;pre>&lt;code class="language-bash">sudo apt-get install libhdf5-serial-dev # for saving keras models efficiently
sudo apt install graphviz
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-bash">conda create -n deeplearn
source activate deeplearn
conda install tensorflow-gpu
conda install matplotlib
conda install opencv # needed for some examples
conda install pydot # graphviz
conda install pillow # python imaging library
conda install cython # Why?
conda install ipykernel # for kernel selection in jupyter
# conda install matplotlib PyYAML opencv-python pydot pillow cython
&lt;/code>&lt;/pre>
&lt;h2 id="check-tensorflow-gpu">Check tensorflow gpu&lt;/h2>
&lt;pre>&lt;code class="language-python">import tensorflow as tf
tf.test.is_gpu_available(
cuda_only=False,
min_cuda_compute_capability=None
)
&lt;/code>&lt;/pre>
&lt;h2 id="archived">Archived&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.pugetsystems.com/labs/hpc/Install-TensorFlow-with-GPU-Support-the-Easy-Way-on-Ubuntu-18-04-without-installing-CUDA-1170/" target="_blank" rel="noopener">Install TensorFlow with GPU Support the Easy Way&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>System Path</title><link>https://bodoburger.github.io/notes/anaconda/anaconda-path/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bodoburger.github.io/notes/anaconda/anaconda-path/</guid><description>&lt;ul>
&lt;li>&lt;a href="https://docs.anaconda.com/anaconda/user-guide/faq/#installing-anaconda" target="_blank" rel="noopener">Anaconda-FAQ on whether you should add Anaconda to the PATH&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="prevent-conda-from-activating-the-base-env-by-default">Prevent Conda from activating the base env by default&lt;/h3>
&lt;pre>&lt;code>conda config --set auto_activate_base false
&lt;/code>&lt;/pre>
&lt;p>&lt;a href="https://stackoverflow.com/questions/54429210/how-do-i-prevent-conda-from-activating-the-base-environment-by-default">https://stackoverflow.com/questions/54429210/how-do-i-prevent-conda-from-activating-the-base-environment-by-default&lt;/a>&lt;/p>
&lt;h3 id="temporarily">Temporarily&lt;/h3>
&lt;p>To add Anaconda temporarily to the PATH, open a terminal and type:&lt;/p>
&lt;p>&lt;code>export PATH=&amp;quot;/home/bodo/anaconda3/bin:$PATH&amp;quot;&lt;/code>&lt;/p>
&lt;p>Show PATH:&lt;/p>
&lt;p>&lt;code>echo $PATH&lt;/code>&lt;/p></description></item><item><title>Setup and Config</title><link>https://bodoburger.github.io/notes/git/git-config/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bodoburger.github.io/notes/git/git-config/</guid><description>&lt;h2 id="config">&lt;code>config&lt;/code>&lt;/h2>
&lt;h3 id="show-or-change-git-username-or-email-address">Show or change Git username or email address&lt;/h3>
&lt;pre>&lt;code class="language-Bash">$ git config --list # repository-specific settings
$ git config --list --global # global git settings
$ git config user.name &amp;quot;Enrico Pallazzo&amp;quot;
$ git config user.email &amp;quot;enrico.pallazzo@lapd.com&amp;quot;
&lt;/code>&lt;/pre>
&lt;p>The global settings are stored in the Git config file
in the HOME directory (&lt;code>~/.gitconfig&lt;/code>),
repository-specific settings are found at &lt;code>.git/config&lt;/code>
in the respective repository folder.&lt;/p></description></item><item><title>Sharing and Updating Projects</title><link>https://bodoburger.github.io/notes/git/git-remote/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bodoburger.github.io/notes/git/git-remote/</guid><description>&lt;h2 id="remote">Remote&lt;/h2>
&lt;p>&lt;a href="https://git-scm.com/docs/git-remote">https://git-scm.com/docs/git-remote&lt;/a>&lt;/p>
&lt;h3 id="push-local-repository-to-existing-remote">Push local repository to existing remote&lt;/h3>
&lt;pre>&lt;code class="language-Bash">$ git remote add origin git@github.com:USERNAME/REPOSITORY.git
$ git push --all --set-upstream origin
&lt;/code>&lt;/pre>
&lt;h3 id="show-or-change-remote">Show or change remote&lt;/h3>
&lt;p>In this example we switch from HTTPS to SSH:&lt;/p>
&lt;pre>&lt;code class="language-Bash">$ git remote -v
&amp;gt; origin https://github.com/USERNAME/REPOSITORY.git (fetch)
&amp;gt; origin https://github.com/USERNAME/REPOSITORY.git (push)
$ git remote set-url origin git@github.com:USERNAME/REPOSITORY.git
$ git remote -v
&amp;gt; origin git@github.com:USERNAME/REPOSITORY.git (fetch)
&amp;gt; origin git@github.com:USERNAME/REPOSITORY.git (push)
&lt;/code>&lt;/pre>
&lt;h2 id="submodules">Submodules&lt;/h2>
&lt;p>&lt;a href="https://git-scm.com/docs/git-submodule">https://git-scm.com/docs/git-submodule&lt;/a>&lt;/p>
&lt;h3 id="add-a-submodule">Add a submodule&lt;/h3>
&lt;pre>&lt;code class="language-Bash">git submodule add git@github.com:USERNAME/REPOSITORY.git PATH/TO/SUBMODULEDIR
&lt;/code>&lt;/pre>
&lt;h3 id="download-files-to-empty-submodule-directory">Download files to empty submodule directory&lt;/h3>
&lt;p>When cloning a repository with submodules and the submodule directories are empty:&lt;/p>
&lt;pre>&lt;code class="language-Bash">git submodule update --init --recursive
&lt;/code>&lt;/pre>
&lt;h3 id="remove-a-submodule-leaving-no-trace">Remove a submodule (leaving no trace)&lt;/h3>
&lt;pre>&lt;code class="language-Bash">git rm PATH/TO/SUBMODULEDIR
rm -rf .git/modules/PATH/TO/SUBMODULEDIR
git config -f .git/config --remove-section submodule.PATH/TO/SUBMODULEDIR 2&amp;gt; /dev/null
&lt;/code>&lt;/pre></description></item><item><title>Updating Anaconda</title><link>https://bodoburger.github.io/notes/anaconda/anaconda-update/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bodoburger.github.io/notes/anaconda/anaconda-update/</guid><description>&lt;h2 id="update-base-environment">Update base environment&lt;/h2>
&lt;pre>&lt;code class="language-bash">conda update conda
conda update anaconda
&lt;/code>&lt;/pre>
&lt;h2 id="update-all-packages">Update all packages&lt;/h2>
&lt;pre>&lt;code class="language-bash">conda update --all
&lt;/code>&lt;/pre></description></item></channel></rss>