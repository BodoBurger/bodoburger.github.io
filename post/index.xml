<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blog | Bodo Burger</title><link>https://bodoburger.github.io/post/</link><atom:link href="https://bodoburger.github.io/post/index.xml" rel="self" type="application/rss+xml"/><description>Blog</description><generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Bodo Burger 2020</copyright><image><url>img/map[gravatar:%!s(bool=false) shape:circle]</url><title>Blog</title><link>https://bodoburger.github.io/post/</link></image><item><title>Use R, Google Sheets and a nutrition API to calculate a nutrition table</title><link>https://bodoburger.github.io/post/2019-04-nutrition-table-google-sheets/</link><pubDate>Mon, 01 Apr 2019 00:00:00 +0000</pubDate><guid>https://bodoburger.github.io/post/2019-04-nutrition-table-google-sheets/</guid><description>
&lt;p>I recently stumbled upon this
&lt;a href="https://greenysherry.com/life-changing-brot-mit-nuessen-nach-my-new-roots-glutenfrei-vegan/">bread recipe&lt;/a>.
It’s quickly prepared, the bread tastes great and is full of valuable ingredients
(only oats, nuts and seeds).
However, being homemade it does not come with a nutrition table.
The following shows an easy way to create one.&lt;/p>
&lt;p>We put the recipe into a spreadsheet
(&lt;a href="https://docs.google.com/spreadsheets/d/1C0AwjQYrudrV3ZLgQJZnCr9La7OVftRTZn3QKMrJx5E">recipe&lt;/a>).
Another spreadsheet contains the nutritional values of the macro nutrients of each ingredient
(&lt;a href="https://docs.google.com/spreadsheets/d/1qgo8Yefb5nx5PVElZvmf6nSDI6RfN2ofd8CeMuSklHk">food stats&lt;/a>).
We combine these using &lt;strong>R&lt;/strong> to get the nutrition table.
Then, we look at an alternative to manually creating a spreadsheet with nutritional information
by using an online database.
As a bonus, we can calculate the price of the recipe.&lt;/p>
&lt;div id="downloading-google-sheets-to-r" class="section level2">
&lt;h2>Downloading Google Sheets to R&lt;/h2>
&lt;p>A simple way to import Google Sheets to &lt;strong>R&lt;/strong> is the
&lt;a href="https://cran.r-project.org/package=gsheet">gsheet&lt;/a> package.
We only need to supply the sharing link.
It returns a &lt;a href="https://tibble.tidyverse.org/">tibble&lt;/a>.&lt;/p>
&lt;pre class="r">&lt;code>food_stats = gsheet::gsheet2tbl(&amp;quot;https://docs.google.com/spreadsheets/d/1qgo8Yefb5nx5PVElZvmf6nSDI6RfN2ofd8CeMuSklHk&amp;quot;)
recipe = gsheet::gsheet2tbl(&amp;quot;https://docs.google.com/spreadsheets/d/1C0AwjQYrudrV3ZLgQJZnCr9La7OVftRTZn3QKMrJx5E&amp;quot;)&lt;/code>&lt;/pre>
&lt;p>&lt;code>food_stats&lt;/code> contains more ingredients than we need for our bread recipe.
So when we merge both data frames we only want to keep the rows
that contain the ingredients of the recipe.
This is done by &lt;code>left_join()&lt;/code> from the
&lt;a href="https://cran.r-project.org/package=dplyr">dplyr&lt;/a> package.&lt;/p>
&lt;pre class="r">&lt;code>library(dplyr)
bread_ingredient_stats = left_join(recipe, food_stats, &amp;quot;Description&amp;quot;)&lt;/code>&lt;/pre>
&lt;/div>
&lt;div id="calculating-the-nutritional-values" class="section level2">
&lt;h2>Calculating the nutritional values&lt;/h2>
&lt;p>We have 10 ingredients. First, we create a vector that gives us
the quantity of each ingredient in grams,
then we select the columns that are relevant for the nutrition table.&lt;/p>
&lt;pre class="r">&lt;code>nutrient_names = c(&amp;quot;Calories (kcal)&amp;quot;, &amp;quot;Total Fat&amp;quot;, &amp;quot;Saturated Fat&amp;quot;,
&amp;quot;Total Carbs&amp;quot;, &amp;quot;Sugar&amp;quot;, &amp;quot;Dietary Fiber&amp;quot;, &amp;quot;Protein&amp;quot;)
quantities = select(bread_ingredient_stats, &amp;quot;Quantity (gr)&amp;quot;)[[1]]
nutrition_values = bread_ingredient_stats %&amp;gt;% select(nutrient_names)&lt;/code>&lt;/pre>
&lt;p>The following calculation gives us the quantity of
each macro nutrient in our bread &lt;em>per 100g&lt;/em>:&lt;/p>
&lt;pre class="r">&lt;code>nutrition_table = colSums(nutrition_values * quantities) / sum(quantities)&lt;/code>&lt;/pre>
&lt;p>Finally, we can print our nutrition table:&lt;/p>
&lt;pre class="r">&lt;code>knitr::kable(nutrition_table, digits = 1, col.names = &amp;quot;per 100g&amp;quot;,
caption = &amp;quot;Nutrition table&amp;quot;)&lt;/code>&lt;/pre>
&lt;table>
&lt;caption>&lt;span id="tab:unnamed-chunk-5">Table 1: &lt;/span>Nutrition table&lt;/caption>
&lt;thead>
&lt;tr class="header">
&lt;th>&lt;/th>
&lt;th align="right">per 100g&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr class="odd">
&lt;td>Calories (kcal)&lt;/td>
&lt;td align="right">307.3&lt;/td>
&lt;/tr>
&lt;tr class="even">
&lt;td>Total Fat&lt;/td>
&lt;td align="right">22.5&lt;/td>
&lt;/tr>
&lt;tr class="odd">
&lt;td>Saturated Fat&lt;/td>
&lt;td align="right">4.7&lt;/td>
&lt;/tr>
&lt;tr class="even">
&lt;td>Total Carbs&lt;/td>
&lt;td align="right">12.2&lt;/td>
&lt;/tr>
&lt;tr class="odd">
&lt;td>Sugar&lt;/td>
&lt;td align="right">0.5&lt;/td>
&lt;/tr>
&lt;tr class="even">
&lt;td>Dietary Fiber&lt;/td>
&lt;td align="right">10.6&lt;/td>
&lt;/tr>
&lt;tr class="odd">
&lt;td>Protein&lt;/td>
&lt;td align="right">12.6&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Calorie-wise very similar to your &lt;a href="https://www.google.com/search?q=brown+bread">typical brown bread&lt;/a>, but rich in fat.
Trust me, the bread is very filling, so you won’t be able to eat too much of it anyways.
And how much does it cost?&lt;/p>
&lt;pre class="r">&lt;code>prices = select(bread_ingredient_stats, &amp;quot;Price (€)&amp;quot;)[[1]]
packaging = select(bread_ingredient_stats, &amp;quot;Packaging (g)&amp;quot;)[[1]]
(price_total = sum(prices / packaging * quantities, na.rm = TRUE))&lt;/code>&lt;/pre>
&lt;pre>&lt;code>## [1] 3.208962&lt;/code>&lt;/pre>
&lt;p>One loaf of bread is 3.21€ (not including energy and time)
weighing 910 grams (raw ingredients).
I think that is a fair price for a bread I can eat from for a whole week.&lt;/p>
&lt;/div>
&lt;div id="using-the-api-of-a-nutrition-database" class="section level2">
&lt;h2>Using the API of a nutrition database&lt;/h2>
&lt;p>Instead of manually creating a spreadsheet for the nutritional values of each ingredient
we can fetch the information from on online database.
We use &lt;a href="https://openfoodfacts.org">openfoodfacts&lt;/a>.
It’s a crowd-sourced database of food stats.
To identify a product we need a barcode for each ingredient
which I added to the recipe spreadsheet.
The openfoodfacts API returns a JSON file which we can convert to a list
using the &lt;a href="https://cran.r-project.org/package=rjson">rjson&lt;/a> package.
We write two helper functions to fetch and extract the relevant information.&lt;/p>
&lt;pre class="r">&lt;code>library(&amp;quot;rjson&amp;quot;)
fetch_json = function(barcode, url = &amp;quot;https://world.openfoodfacts.org/api/v0/product/&amp;quot;) {
query = paste0(url, barcode, &amp;quot;.json&amp;quot;)
fromJSON(file = query)
}
extract_nutrition_values = function(food_list,
nutriments = c(&amp;quot;energy_100g&amp;quot;, &amp;quot;fat_100g&amp;quot;, &amp;quot;saturated-fat_100g&amp;quot;,
&amp;quot;carbohydrates_100g&amp;quot;, &amp;quot;sugars_100g&amp;quot;, &amp;quot;fiber_100g&amp;quot;,
&amp;quot;proteins_100g&amp;quot;)) {
nv = setNames(rep(0, length(nutriments)), nutriments)
tmp = unlist(food_list$product$nutriments[nutriments])
nv[names(tmp)] = tmp
nv
}
barcodes = bread_ingredient_stats$Barcode[-10] # water does not have a barcode
nutrition_values_api = matrix(0, nrow = 10, ncol = length(nutrition_values),
dimnames = list(1:10, nutrient_names))
for(i in seq_along(barcodes)) {
food_list_tmp = fetch_json(barcodes[i])
nutrition_values_api[i,] = extract_nutrition_values(food_list_tmp)
}&lt;/code>&lt;/pre>
&lt;p>&lt;code>nutrition_values_api&lt;/code> has the same structure as &lt;code>nutrition_values&lt;/code> from above,
so we can proceed as before:&lt;/p>
&lt;pre class="r">&lt;code>(nutrition_table_api = colSums(nutrition_values_api * quantities) / sum(quantities))&lt;/code>&lt;/pre>
&lt;pre>&lt;code>## Calories (kcal) Total Fat Saturated Fat Total Carbs
## 1344.0329670 22.4906593 4.7263736 12.3516484
## Sugar Dietary Fiber Protein
## 0.4923077 8.9291209 12.5313187&lt;/code>&lt;/pre>
&lt;p>The results for the macro nutrients differ slightly which is expected
because we changed the data source.
However, the value for &lt;em>calories&lt;/em> quadrupled
because the API reported energy in kilojoule (kJ) instead of kilocalories.
To correct for this we divide the value by &lt;span class="math inline">\(4.1858\)&lt;/span>.&lt;/p>
&lt;pre class="r">&lt;code>nutrition_table_api[1] = nutrition_table_api[1] / 4.1858
knitr::kable(nutrition_table_api, digits = 1, col.names = &amp;quot;per 100g&amp;quot;,
caption = &amp;quot;Nutrition table&amp;quot;)&lt;/code>&lt;/pre>
&lt;table>
&lt;caption>&lt;span id="tab:unnamed-chunk-9">Table 2: &lt;/span>Nutrition table&lt;/caption>
&lt;thead>
&lt;tr class="header">
&lt;th>&lt;/th>
&lt;th align="right">per 100g&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr class="odd">
&lt;td>Calories (kcal)&lt;/td>
&lt;td align="right">321.1&lt;/td>
&lt;/tr>
&lt;tr class="even">
&lt;td>Total Fat&lt;/td>
&lt;td align="right">22.5&lt;/td>
&lt;/tr>
&lt;tr class="odd">
&lt;td>Saturated Fat&lt;/td>
&lt;td align="right">4.7&lt;/td>
&lt;/tr>
&lt;tr class="even">
&lt;td>Total Carbs&lt;/td>
&lt;td align="right">12.4&lt;/td>
&lt;/tr>
&lt;tr class="odd">
&lt;td>Sugar&lt;/td>
&lt;td align="right">0.5&lt;/td>
&lt;/tr>
&lt;tr class="even">
&lt;td>Dietary Fiber&lt;/td>
&lt;td align="right">8.9&lt;/td>
&lt;/tr>
&lt;tr class="odd">
&lt;td>Protein&lt;/td>
&lt;td align="right">12.5&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>And we are done!&lt;/p>
&lt;/div></description></item><item><title>Interpretable Machine Learning by Christoph Molnar</title><link>https://bodoburger.github.io/post/2019-02-interpretable-ml-book/</link><pubDate>Tue, 26 Feb 2019 00:00:00 +0000</pubDate><guid>https://bodoburger.github.io/post/2019-02-interpretable-ml-book/</guid><description>
&lt;p>The book gives an overview of common methods
that help to better understand machine learning models.
You can support the author by buying the book on
&lt;a href="https://leanpub.com/interpretable-machine-learning">leanpub&lt;/a>.
There is a &lt;a href="https://christophm.github.io/interpretable-ml-book">free online version&lt;/a>
of the book, too.&lt;/p>
&lt;div id="introduction" class="section level2">
&lt;h2>Introduction&lt;/h2>
&lt;p>The beginning of the book covers three short stories
that illustrate the detrimental consequences of
a world controlled by black box machine learning models
(&lt;a href="https://christophm.github.io/interpretable-ml-book/storytime.html">1.1&lt;/a>).
They serve as motivation for why we want to use methods
that improve understanding of opaque models.
The ultimate goal of these methods is that a human can understand a model
so that he can consistently predict its results.&lt;/p>
&lt;p>&lt;a href="https://christophm.github.io/interpretable-ml-book/interpretability.html">Chapter 2&lt;/a>
lays the foundation for the discussion on machine learning interpretability
by answering the following questions:&lt;/p>
&lt;ul>
&lt;li>Why is interpretation important and when do we need it
(&lt;a href="https://christophm.github.io/interpretable-ml-book/interpretability-importance.html">2.1&lt;/a>)?&lt;/li>
&lt;li>How can we classify different interpretation methods
(&lt;a href="https://christophm.github.io/interpretable-ml-book/taxonomy-of-interpretability-methods.html">2.2&lt;/a>)?
&lt;ul>
&lt;li>intrinsic vs post-hoc methods&lt;/li>
&lt;li>result of the method&lt;/li>
&lt;li>model-specific vs model-agnostic&lt;/li>
&lt;li>local vs global&lt;/li>
&lt;/ul>&lt;/li>
&lt;li>Which part of a model do we want to inspect
(&lt;a href="https://christophm.github.io/interpretable-ml-book/scope-of-interpretability.html">2.3&lt;/a>)?&lt;/li>
&lt;li>How do we evaluate the interpretation
(&lt;a href="https://christophm.github.io/interpretable-ml-book/evaluation-of-interpretability.html">2.4&lt;/a>)?&lt;/li>
&lt;li>What does a human need to know to understand a black box model
(&lt;a href="https://christophm.github.io/interpretable-ml-book/explanation.html">2.6&lt;/a>)?&lt;/li>
&lt;/ul>
&lt;p>The presented interpretation methods are repeatedly applied to three freely available data sets
representing different kinds of prediction tasks:
&lt;a href="http://archive.ics.uci.edu/ml/datasets/Bike+Sharing+Dataset">daily bike rentals&lt;/a> (regression),
&lt;a href="https://archive.ics.uci.edu/ml/datasets/Cervical+cancer+%28Risk+Factors%29">cancer risk factors&lt;/a> (classification) and
&lt;a href="dcomp.sor.ufscar.br/talmeida/youtubespamcollection/">YouTube spam comments&lt;/a> (text classification).
&lt;a href="https://christophm.github.io/interpretable-ml-book/data.html">Chapter 3&lt;/a>
introduces the datasets in more detail.&lt;/p>
&lt;/div>
&lt;div id="interpretable-models" class="section level2">
&lt;h2>Interpretable models&lt;/h2>
&lt;p>This chapter presents models that are interpretable by itself.
For Molnar these are
&lt;a href="https://en.wikipedia.org/wiki/Linear_regression">linear regression&lt;/a>,
&lt;a href="https://en.wikipedia.org/wiki/Logistic_regression">logistic regression&lt;/a>,
&lt;a href="https://en.wikipedia.org/wiki/Decision_tree_learning">decision trees&lt;/a>,
&lt;a href="https://en.wikipedia.org/wiki/Decision_tree#Decision_rules">decision rules&lt;/a>,
RuleFit (&lt;a href="http://statweb.stanford.edu/~jhf/ftp/RuleFit.pdf">Friedman and Popescu, 2005&lt;/a>),
&lt;a href="https://en.wikipedia.org/wiki/Naive_Bayes_classifier">naive Bayes&lt;/a> and
&lt;a href="https://en.wikipedia.org/wiki/K-nearest_neighbors_algorithm">k-nearest neighbors&lt;/a>.&lt;/p>
&lt;p>These models have in common that the result is accessible to the user without further steps.
They differ in regards to linearity, monotonicity,
the possibility to include feature interactions and the tasks they can handle.&lt;/p>
&lt;p>Molnar concludes the discussion of each method with a comparison of its advantages and disadvantages.
E.g. &lt;a href="https://christophm.github.io/interpretable-ml-book/limo.html#advantages">the apparent simplicity of linear models&lt;/a>
is opposed by the difficulty to incorporate nonlinearity, the low predictive performance and
the potentially unintuitive interpretation of the coefficients due to correlated features.&lt;/p>
&lt;p>The following table is an overview of implementations of &lt;em>interpretable models&lt;/em>
both for &lt;strong>R&lt;/strong> and &lt;strong>Python&lt;/strong>:&lt;/p>
&lt;table>
&lt;tr>
&lt;th>
Method&lt;br>
&lt;/th>
&lt;th>
R
&lt;/th>
&lt;th>
Python
&lt;/th>
&lt;/tr>
&lt;tr>
&lt;td>
linear model
&lt;/td>
&lt;td>
&lt;a href="https://stat.ethz.ch/R-manual/R-devel/library/stats/html/lm.html">lm()&lt;/a>
&lt;/td>
&lt;td>
&lt;a href="https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LinearRegression.html#sklearn.linear_model.LinearRegression">sklearn.linear_model.LinearRegression()&lt;/a>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
logistic model
&lt;/td>
&lt;td>
&lt;a href="https://stat.ethz.ch/R-manual/R-devel/library/stats/html/glm.html">glm(formula, binomial(link = “logit”))&lt;/a>
&lt;/td>
&lt;td>
&lt;a href="https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html#sklearn.linear_model.LogisticRegression">sklearn.linear_model.LogisticRegression()&lt;/a>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
decision tree
&lt;/td>
&lt;td>
&lt;a href="https://cran.r-project.org/package=rpart">rpart()&lt;/a>
&lt;/td>
&lt;td>
&lt;a href="https://scikit-learn.org/stable/modules/tree.html">sklearn.tree&lt;/a>
&lt;/tr>
&lt;tr>
&lt;td>
decision rule
&lt;/td>
&lt;td>
&lt;a href="https://cran.r-project.org/package=OneR">OneR()&lt;/a>
&lt;/td>
&lt;td>
&lt;a href="https://oracle.github.io/Skater/reference/interpretation.html#bayesian-rule-lists-brl">BRLC() (skater)&lt;/a>
&lt;/td
&lt;/tr>
&lt;tr>
&lt;td>
RuleFit
&lt;/td>
&lt;td>
&lt;a href="https://cran.r-project.org/package=pre">pre()&lt;/a>
&lt;/td>
&lt;td>
&lt;a href="https://github.com/christophM/rulefit">RuleFit()&lt;/a> or
&lt;a href="https://github.com/scikit-learn-contrib/skope-rules">SkopeRules()&lt;/a>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
Naive Bayes
&lt;/td>
&lt;td>
&lt;a href="https://cran.r-project.org/package=e1071">naiveBayes()&lt;/a>
&lt;td>
&lt;a href="https://scikit-learn.org/stable/modules/naive_bayes.html">sklearn.naive_bayes&lt;/a>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
k-nearest neighbors
&lt;/td>
&lt;td>
&lt;a href="https://cran.r-project.org/package=kknn">kknn()&lt;/a>
&lt;td>
&lt;a href="https://scikit-learn.org/stable/modules/neighbors.html#nearest-neighbors-classification">sklearn.neighbors&lt;/a>
&lt;/td>
&lt;/table>
&lt;/div>
&lt;div id="model-agnostic-methods" class="section level2">
&lt;h2>Model-agnostic methods&lt;/h2>
&lt;p>A model-agnostic interpretability method is applied after a model is trained
to make the result more accessible or transparent.
Best case the method is flexible enough to be applied on any model.&lt;/p>
&lt;table>
&lt;tr>
&lt;th>
Method&lt;br>
&lt;/th>
&lt;th>
R
&lt;/th>
&lt;th>
Python
&lt;/th>
&lt;/tr>
&lt;tr>
&lt;td>
Partial Dependence Plot
&lt;/td>
&lt;td>
Packages: &lt;a href="https://cran.r-project.org/package=mlr">mlr&lt;/a>,
&lt;a href="https://cran.r-project.org/package=pdp">pdp&lt;/a>,
&lt;a href="https://cran.r-project.org/package=iml">iml&lt;/a>,
&lt;a href="https://github.com/BodoBurger/intame">intame&lt;/a>
&lt;/td>
&lt;td>
&lt;a href="https://scikit-learn.org/stable/modules/partial_dependence.html">sklearn.inspection.plot_partial_dependence()&lt;/a>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
Individual Conditional Expectation
&lt;/td>
&lt;td>
Packages: &lt;a href="https://cran.r-project.org/package=iml">iml&lt;/a>,
&lt;a href="https://cran.r-project.org/package=pdp">pdp&lt;/a>,
&lt;a href="https://cran.r-project.org/package=ICEbox">ICEbox&lt;/a>
&lt;/td>
&lt;td>
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>
Accumulated Local Effect
&lt;/td>
&lt;td>
Packages: &lt;a href="https://cran.r-project.org/package=iml">iml&lt;/a>,
&lt;a href="https://cran.r-project.org/package=ALEPlot">ALEPlot&lt;/a>,
&lt;a href="https://github.com/BodoBurger/intame">intame&lt;/a>
&lt;/td>
&lt;td>
&lt;/td>
&lt;/tr>
&lt;/table>
&lt;/div></description></item><item><title>Git Resources / Cheat Sheet</title><link>https://bodoburger.github.io/post/2017-07-git-cheat-sheet/</link><pubDate>Tue, 11 Jul 2017 00:00:00 +0000</pubDate><guid>https://bodoburger.github.io/post/2017-07-git-cheat-sheet/</guid><description>&lt;h2>Table of Contents&lt;/h2>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#useful-articles--resources">Useful articles / resources&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#basics">Basics&lt;/a>&lt;/li>
&lt;li>&lt;a href="#interesting-discussions-on-git">Interesting discussions on Git&lt;/a>&lt;/li>
&lt;li>&lt;a href="#github">GitHub&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#branches">Branches&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#change-branch-without-committing-changes-stash-and-pop">Change branch without committing changes: stash and pop&lt;/a>&lt;/li>
&lt;li>&lt;a href="#create-a-local-branch-push-it-to-a-remote-repository-and-track-it">Create a local branch, push it to a remote repository and track it&lt;/a>&lt;/li>
&lt;li>&lt;a href="#delete-local-branch">Delete local branch&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#configuration">Configuration&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#show-or-change-git-username-or-email-address">Show or change Git username or email address&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#index">Index&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#remove-files-from-the-index-without-removing-them-from-disc">Remove files from the index without removing them from disc&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#merging">Merging&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#merge-master-into-feature-branch-before-making-a-pr">Merge master into feature branch before making a PR&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#remote">Remote&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#push-local-repository-to-existing-remote">Push local repository to existing remote&lt;/a>&lt;/li>
&lt;li>&lt;a href="#show-or-change-remote">Show or change remote&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#submodules">Submodules&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#add-a-submodule">Add a submodule&lt;/a>&lt;/li>
&lt;li>&lt;a href="#download-files-to-empty-submodule-directory">Download files to empty submodule directory&lt;/a>&lt;/li>
&lt;li>&lt;a href="#remove-a-submodule-leaving-no-trace">Remove a submodule (leaving no trace)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;p>This blog post combines both a collection of useful resources on Git and
a cheat sheet for git commands I googled repeatedly.
It will be updated from time to time.&lt;/p>
&lt;h2 id="useful-articles--resources">Useful articles / resources&lt;/h2>
&lt;h3 id="basics">Basics&lt;/h3>
&lt;ul>
&lt;li>
&lt;a href="https://git-scm.com/docs" target="_blank" rel="noopener">Git reference manual&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://git-scm.com/book/en/v2" target="_blank" rel="noopener">Pro Git book (2nd, 2014)&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://stackoverflow.com/questions/315911/git-for-beginners-the-definitive-practical-guide" target="_blank" rel="noopener">Git for beginners on stackoverflow&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://rogerdudler.github.io/git-guide/" target="_blank" rel="noopener">git - the simple guide&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://akrabat.com/the-beginners-guide-to-contributing-to-a-github-project/" target="_blank" rel="noopener">The beginner&amp;rsquo;s guide to contributing to a GitHub project&lt;/a>&lt;/li>
&lt;li>
&lt;a href="http://sethrobertson.github.io/GitFixUm/fixup.html" target="_blank" rel="noopener">On undoing, fixing, or removing commits in git&lt;/a>&lt;/li>
&lt;li>
&lt;a href="http://justinhileman.info/article/git-pretty/" target="_blank" rel="noopener">Git pretty chart&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="interesting-discussions-on-git">Interesting discussions on Git&lt;/h3>
&lt;ul>
&lt;li>
&lt;a href="https://nvie.com/posts/a-successful-git-branching-model/" target="_blank" rel="noopener">A successful Git branching model&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://chris.beams.io/posts/git-commit/" target="_blank" rel="noopener">How to Write a Git Commit Message&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://lornajane.net/posts/2015/code-reviews-before-you-even-run-the-code" target="_blank" rel="noopener">Code Reviews: Before You Even Run The Code&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://softwareengineering.stackexchange.com/questions/69178/what-is-the-benefit-of-gits-two-stage-commit-process-staging" target="_blank" rel="noopener">What is the benefit of gits two stage commit process&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://stackoverflow.com/questions/4878358/why-would-i-want-stage-before-committing-in-git" target="_blank" rel="noopener">Why would I want to stage before committing?&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="github">GitHub&lt;/h3>
&lt;ul>
&lt;li>
&lt;a href="https://github.com/KirstieJane/STEMMRoleModels/wiki/Syncing-your-fork-to-the-original-repository-via-the-browser" target="_blank" rel="noopener">Keep your fork up to date with the original repo via GitHub browser interface&lt;/a>
(
&lt;a href="https://stackoverflow.com/questions/20984802/how-can-i-keep-my-fork-in-sync-without-adding-a-separate-remote/21131381#21131381" target="_blank" rel="noopener">stackoverflow&lt;/a>)&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="branches">Branches&lt;/h2>
&lt;h3 id="change-branch-without-committing-changes-stash-and-pop">Change branch without committing changes: stash and pop&lt;/h3>
&lt;p>Want to have a look at another branch without committing changes done so far?
Put them in a stash where they can hide until you switch back.&lt;/p>
&lt;pre>&lt;code class="language-Bash">$ git stash # on the original branch
$ git checkout other-branch
# do some stuff on the other branch
$ git checkout original-branch
$ git stash pop
&lt;/code>&lt;/pre>
&lt;p>More about
&lt;a href="https://git-scm.com/docs/git-stash" target="_blank" rel="noopener">&lt;em>git-stash&lt;/em>&lt;/a>.&lt;/p>
&lt;h3 id="create-a-local-branch-push-it-to-a-remote-repository-and-track-it">Create a local branch, push it to a remote repository and track it&lt;/h3>
&lt;pre>&lt;code class="language-Bash">$ git checkout -b MyNewBranch # create and switch to new branch
# do some stuff
$ git push -u origin MyNewBranch
&lt;/code>&lt;/pre>
&lt;h3 id="delete-local-branch">Delete local branch&lt;/h3>
&lt;pre>&lt;code class="language-Bash">$ git branch -d MyLocalBranch
&lt;/code>&lt;/pre>
&lt;h2 id="configuration">Configuration&lt;/h2>
&lt;h3 id="show-or-change-git-username-or-email-address">Show or change Git username or email address&lt;/h3>
&lt;pre>&lt;code class="language-Bash">$ git config --list # repository-specific settings
$ git config --list --global # global git settings
$ git config user.name &amp;quot;Enrico Pallazzo&amp;quot;
$ git config user.email &amp;quot;enrico.pallazzo@lapd.com&amp;quot;
&lt;/code>&lt;/pre>
&lt;p>The global settings are stored in the Git config file
in the HOME directory (&lt;code>~/.gitconfig&lt;/code>),
repository-specific settings are found at &lt;code>.git/config&lt;/code>
in the respective repository folder.&lt;/p>
&lt;h2 id="index">Index&lt;/h2>
&lt;h3 id="remove-files-from-the-index-without-removing-them-from-disc">Remove files from the index without removing them from disc&lt;/h3>
&lt;p>If you forgot to add a file to &lt;code>.gitignore&lt;/code>:&lt;/p>
&lt;pre>&lt;code class="language-Bash">$ git rm -rf --cached file-name
&lt;/code>&lt;/pre>
&lt;p>The file is now untracked and can be added to &lt;code>.gitignore&lt;/code>.
Then, you can commit the deletion and the modified gitignore file.&lt;/p>
&lt;h2 id="merging">Merging&lt;/h2>
&lt;h3 id="merge-master-into-feature-branch-before-making-a-pr">Merge master into feature branch before making a PR&lt;/h3>
&lt;pre>&lt;code class="language-Bash">$ git checkout master
$ git pull
$ git checkout new-feature
$ git add *files-and-changes*
$ git commit -m &amp;quot;feature description&amp;quot;
$ git reset HEAD --hard # removes all uncommited files
$ rm *untracked-files* # to prevent merge conflicts
$ git merge master
# resolve potential merge conflicts
$ git commit -m &amp;quot;resolved mergeconflicts | merged master&amp;quot;
$ git push origin new-feature
&lt;/code>&lt;/pre>
&lt;h2 id="remote">Remote&lt;/h2>
&lt;h3 id="push-local-repository-to-existing-remote">Push local repository to existing remote&lt;/h3>
&lt;pre>&lt;code class="language-Bash">$ git remote add origin git@github.com:USERNAME/REPOSITORY.git
$ git push --all --set-upstream origin
&lt;/code>&lt;/pre>
&lt;h3 id="show-or-change-remote">Show or change remote&lt;/h3>
&lt;p>In this example we switch from HTTPS to SSH:&lt;/p>
&lt;pre>&lt;code class="language-Bash">$ git remote -v
&amp;gt; origin https://github.com/USERNAME/REPOSITORY.git (fetch)
&amp;gt; origin https://github.com/USERNAME/REPOSITORY.git (push)
$ git remote set-url origin git@github.com:USERNAME/REPOSITORY.git
$ git remote -v
&amp;gt; origin git@github.com:USERNAME/REPOSITORY.git (fetch)
&amp;gt; origin git@github.com:USERNAME/REPOSITORY.git (push)
&lt;/code>&lt;/pre>
&lt;h2 id="submodules">Submodules&lt;/h2>
&lt;p>&lt;a href="https://git-scm.com/docs/git-submodule">https://git-scm.com/docs/git-submodule&lt;/a>&lt;/p>
&lt;h3 id="add-a-submodule">Add a submodule&lt;/h3>
&lt;pre>&lt;code class="language-Bash">git submodule add git@github.com:USERNAME/REPOSITORY.git PATH/TO/SUBMODULEDIR
&lt;/code>&lt;/pre>
&lt;h3 id="download-files-to-empty-submodule-directory">Download files to empty submodule directory&lt;/h3>
&lt;p>When cloning a repository with submodules and the submodule directories are empty:&lt;/p>
&lt;pre>&lt;code class="language-Bash">git submodule update --init --recursive
&lt;/code>&lt;/pre>
&lt;h3 id="remove-a-submodule-leaving-no-trace">Remove a submodule (leaving no trace)&lt;/h3>
&lt;pre>&lt;code class="language-Bash">git rm PATH/TO/SUBMODULEDIR
rm -rf .git/modules/PATH/TO/SUBMODULEDIR
git config -f .git/config --remove-section submodule.PATH/TO/SUBMODULEDIR 2&amp;gt; /dev/null
&lt;/code>&lt;/pre></description></item></channel></rss>