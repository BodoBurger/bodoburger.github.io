<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Overview | Bodo Burger</title><link>https://bodoburger.github.io/notes/anaconda/</link><atom:link href="https://bodoburger.github.io/notes/anaconda/index.xml" rel="self" type="application/rss+xml"/><description>Overview</description><generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Bodo Burger 2020</copyright><image><url>img/map[gravatar:%!s(bool=false) shape:circle]</url><title>Overview</title><link>https://bodoburger.github.io/notes/anaconda/</link></image><item><title>Uninstalling Anaconda</title><link>https://bodoburger.github.io/notes/anaconda/anaconda-uninstall/</link><pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate><guid>https://bodoburger.github.io/notes/anaconda/anaconda-uninstall/</guid><description>&lt;ul>
&lt;li>
&lt;a href="https://docs.anaconda.com/anaconda/install/uninstall/" target="_blank" rel="noopener">Documentation&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>For a clean uninstall, first install &lt;em>anaconda-clean&lt;/em> package,&lt;/p>
&lt;pre>&lt;code class="language-bash">conda install anaconda-clean
anaconda-clean
&lt;/code>&lt;/pre>
&lt;p>then:&lt;/p>
&lt;pre>&lt;code class="language-bash">rm -rf ~/anaconda3
&lt;/code>&lt;/pre></description></item><item><title>Environments</title><link>https://bodoburger.github.io/notes/anaconda/anaconda-environments/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bodoburger.github.io/notes/anaconda/anaconda-environments/</guid><description>&lt;h2 id="create-new-environment-and-switch-to-it">Create new environment and switch to it&lt;/h2>
&lt;pre>&lt;code class="language-bash">conda create -n name_of_new_env
conda activate name_of_new_env
&lt;/code>&lt;/pre>
&lt;p>Create environment with specific python version:&lt;/p>
&lt;pre>&lt;code class="language-bash">conda create -n name_of_new_env python 3.7
&lt;/code>&lt;/pre>
&lt;h2 id="remove-environment">Remove environment&lt;/h2>
&lt;pre>&lt;code class="language-bash">conda remove -n name_of_env --all
# alternative: conda env remove -n name_of_env
&lt;/code>&lt;/pre>
&lt;h2 id="list-all-environments">List all environments&lt;/h2>
&lt;pre>&lt;code class="language-bash">conda env list
&lt;/code>&lt;/pre>
&lt;h2 id="adding-channels-to-environment">Adding channels to environment&lt;/h2>
&lt;p>Activate the environment, then:&lt;/p>
&lt;pre>&lt;code class="language-bash">conda config --env --add channels conda-forge
&lt;/code>&lt;/pre>
&lt;h2 id="sharing-an-environment">Sharing an environment&lt;/h2>
&lt;p>This can be useful if you want to document the package versions for a project or if you are collaborating with other people so they can work with the same environment.&lt;/p>
&lt;pre>&lt;code class="language-bash">conda env export &amp;gt; environment.yml
&lt;/code>&lt;/pre>
&lt;p>To exclude packages that were installed into the environment as a dependency add the flag &lt;code>--from-history&lt;/code>.
This can help for cross-platform compatibility, because &lt;em>conda&lt;/em> will figure out platform-specific dependencies.
However, this will not document the version of a package if the version was not explicitly stated when installing.&lt;/p>
&lt;pre>&lt;code class="language-bash">conda env export --from-history &amp;gt; environment.yml
&lt;/code>&lt;/pre>
&lt;p>To recreate the environment using the &lt;em>yml&lt;/em> file:&lt;/p>
&lt;pre>&lt;code class="language-bash">conda env create -f environment.yml
&lt;/code>&lt;/pre></description></item><item><title>Installing Anaconda</title><link>https://bodoburger.github.io/notes/anaconda/anaconda-install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bodoburger.github.io/notes/anaconda/anaconda-install/</guid><description>&lt;ul>
&lt;li>
&lt;a href="https://docs.anaconda.com/anaconda/install/linux/" target="_blank" rel="noopener">Documentation&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.anaconda.com/distribution/#linux" target="_blank" rel="noopener">Installer for Linux&lt;/a>&lt;/li>
&lt;/ul>
&lt;pre>&lt;code>bash ~/Downloads/Anaconda3-2019.03-Linux-x86_64.sh
conda update conda
conda update anaconda
&lt;/code>&lt;/pre>
&lt;h2 id="change-kernel-in-jupyter">Change kernel in jupyter&lt;/h2>
&lt;p>Base environment needs the nb_conda_kernels package.
Every environment needs the ipykernel package.&lt;/p>
&lt;pre>&lt;code>conda install nb_conda_kernels
&lt;/code>&lt;/pre>
&lt;h2 id="deep-learning-environment">Deep learning environment&lt;/h2>
&lt;p>Prereq:&lt;/p>
&lt;pre>&lt;code class="language-bash">sudo apt-get install libhdf5-serial-dev # for saving keras models efficiently
sudo apt install graphviz
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-bash">conda create -n deeplearn
source activate deeplearn
conda install tensorflow-gpu
conda install matplotlib
conda install opencv # needed for some examples
conda install pydot # graphviz
conda install pillow # python imaging library
conda install cython # Why?
conda install ipykernel # for kernel selection in jupyter
# conda install matplotlib PyYAML opencv-python pydot pillow cython
&lt;/code>&lt;/pre>
&lt;h2 id="check-tensorflow-gpu">Check tensorflow gpu&lt;/h2>
&lt;pre>&lt;code class="language-python">import tensorflow as tf
tf.test.is_gpu_available(
cuda_only=False,
min_cuda_compute_capability=None
)
&lt;/code>&lt;/pre>
&lt;h2 id="archived">Archived&lt;/h2>
&lt;ul>
&lt;li>
&lt;a href="https://www.pugetsystems.com/labs/hpc/Install-TensorFlow-with-GPU-Support-the-Easy-Way-on-Ubuntu-18-04-without-installing-CUDA-1170/" target="_blank" rel="noopener">Install TensorFlow with GPU Support the Easy Way&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>System Path</title><link>https://bodoburger.github.io/notes/anaconda/anaconda-path/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bodoburger.github.io/notes/anaconda/anaconda-path/</guid><description>&lt;ul>
&lt;li>
&lt;a href="https://docs.anaconda.com/anaconda/user-guide/faq/#installing-anaconda" target="_blank" rel="noopener">Anaconda-FAQ on whether you should add Anaconda to the PATH&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="prevent-conda-from-activating-the-base-env-by-default">Prevent Conda from activating the base env by default&lt;/h3>
&lt;pre>&lt;code>conda config --set auto_activate_base false
&lt;/code>&lt;/pre>
&lt;p>&lt;a href="https://stackoverflow.com/questions/54429210/how-do-i-prevent-conda-from-activating-the-base-environment-by-default">https://stackoverflow.com/questions/54429210/how-do-i-prevent-conda-from-activating-the-base-environment-by-default&lt;/a>&lt;/p>
&lt;h3 id="temporarily">Temporarily&lt;/h3>
&lt;p>To add Anaconda temporarily to the PATH, open a terminal and type:&lt;/p>
&lt;p>&lt;code>export PATH=&amp;quot;/home/bodo/anaconda3/bin:$PATH&amp;quot;&lt;/code>&lt;/p>
&lt;p>Show PATH:&lt;/p>
&lt;p>&lt;code>echo $PATH&lt;/code>&lt;/p></description></item><item><title>Updating Anaconda</title><link>https://bodoburger.github.io/notes/anaconda/anaconda-update/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bodoburger.github.io/notes/anaconda/anaconda-update/</guid><description>&lt;h2 id="update-base-environment">Update base environment&lt;/h2>
&lt;pre>&lt;code class="language-bash">conda update conda
conda update anaconda
&lt;/code>&lt;/pre>
&lt;h2 id="update-all-packages">Update all packages&lt;/h2>
&lt;pre>&lt;code class="language-bash">conda update --all
&lt;/code>&lt;/pre></description></item></channel></rss>